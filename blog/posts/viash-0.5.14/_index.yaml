changes: "### NEW FUNCTIONALITY\n\n* `Functionality`: Allow specifying argument groups.\
  \ Example:\n  ```yaml\n  functionality:\n    ...\n    argument_groups:\n      -\
  \ name: First group\n        arguments: [foo, bar]\n        description: Description\n\
  \  ```\n\n* Addition of the `viash_nxf_schema` component for converting a Viash\
  \ config (for a workflow) into a nextflow schema file.\n\n* `NextflowVdsl3Platform`:\
  \ Use `--param_list` to initialise a Nextflow channel with multiple parameter sets.\n\
  \  Possible formats are csv, json, yaml, or simply a yaml_blob.\n  A csv should\
  \ have column names which correspond to the different arguments of this pipeline.\n\
  \  A json or a yaml file should be a list of maps, each of which has keys corresponding\
  \ to the arguments of the pipeline.\n  A yaml blob can also be passed directly as\
  \ a parameter.\n  Inside the Nextflow pipeline code, params.param_list can also\
  \ be used to directly a list of parameter sets.\n  When passing a csv, json or yaml,\
  \ relative path names are relativized to the location of the parameter file.\n \
  \ \n  Examples: \n  ```sh\n  nextflow run \"target/foo/bar/main.nf\" --param_list\
  \ '[{\"id\": \"foo\", \"input\": \"/path/to/bar\"}]'\n  nextflow run \"target/foo/bar/main.nf\"\
  \ --param_list \"params.csv\" --reference \"/path/to/ref\"\n  ```\n\n### MAJOR CHANGES\n\
  \n* `NextflowVdsl3Platform`: The functionality is now slurped from a json instead\
  \ of manually\n  taking care of the formatting in Groovy.\n\n* `NextflowVdsl3Platform`:\
  \ The `--help` is auto-generated from the config.\n\n### MINOR CHANGES\n\n* `NextflowVdsl3Platform`:\
  \ Allow both `--publish_dir` and `--publishDir` when `auto.publish = true`.\n\n\
  * `NextflowVdsl3Platform`: Allow passing parameters with multiplicity > 1 from Nextflow\
  \ CLI.\n\n* `Main`: Added `viash --cli_export` which outputs the internal cli construction\
  \ information \n  to console. This is to be used to automate populating the documentation\
  \ website.\n\n* `viash ns`: Display success and failure summary statistics, printed\
  \ to stderr.\n\n* `DataObject`: `.alternatives` is now a `OneOrMore[String]` instead\
  \ of `List[String]`, meaning\n  you can now specify `{ type: string, name: \"--foo\"\
  , alternatives: \"-f\" }` instead of \n  `{ type: string, name: \"--foo\", alternatives:\
  \ [ \"-f\" ] }`\n\n* `BashWrapper`: Added metadata field `meta_executable`, which\
  \ is a shorthand notation for\n  `meta_executable=\"$meta_resources_dir/$meta_functionality_name\"\
  `\n\n### INTERNAL CHANGES\n\n* `Arguments`: Internal naming of functionality.arguments\
  \ is changed from DataObject to Arguments. Change is also applied to child classes,\
  \ e.g. StringObject -> StringArgument.\n\n* `Script`: Allow more control over where\
  \ injected code ends up.\n\n* Restructure type system to allow type-specific arguments.\n\
  \n### BUG FIXES\n\n* `DockerPlatform`: Change `org.opencontainers.image.version`\
  \ annotation to `functionality.version` when set.\n  Additionally fixed retrieving\
  \ the git tag possibly returning `fatal: No names found, cannot describe anything.`\
  \ or similar.\n\n* `viash config inject`: Fix config inject when `.functionality.inputs`\
  \ or `.functionality.outputs` is used.\n\n* `BashWrapper`: Don't add `bc` as dependency.\
  \ Only perform integer/float min/max checks when bc is available, otherwise ignore.\n\
  \n* `DockerPlatform`: Fix inputs & outputs arguments being present twice.\n\n* `viash\
  \ ns test`: Silently skip Nextflow platforms as these don't support tests and will\
  \ always fail.\n\n* `Testbenches`: Better capture expected error messages while\
  \ running testbenches. Having these show on the console could be confusing.\n\n\
  * `NextflowVdsl3Platform`: Fix issue when running multiple VDSL3 modules concurrently\
  \ on the same channel.\n\n"
date: '2022-06-30'
subtitle: Argument groups can now be defined in the Viash config
version: 0.5.14
whats_new: '

  Argument groups allow for grouping arguments together by function or category, making
  the `--help` output a lot more clear for components with a lot of arguments.


  '

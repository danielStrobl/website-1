<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Viash</title>
<link>https://viash.io/blog/index.html</link>
<atom:link href="https://viash.io/blog/index.xml" rel="self" type="application/rss+xml"/>
<description></description>
<image>
<url>https://viash.io/viash.png</url>
<title>Viash</title>
<link>https://viash.io/blog/index.html</link>
<height>38</height>
<width>144</width>
</image>
<generator>quarto-1.2.313</generator>
<lastBuildDate>Wed, 09 Nov 2022 00:00:00 GMT</lastBuildDate>
<item>
  <title>Viash 0.6.3</title>
  <dc:creator>Viash Team</dc:creator>
  <link>https://viash.io/blog/posts/viash-0.6.3/index.html</link>
  <description><![CDATA[ 




<p>This release features contains mostly quality of life improvements and some experimental functionality. Most notably:</p>
<ul>
<li><p><code>viash ns list</code> now only returns a config just once instead of once per platform.</p></li>
<li><p>A functionality’s info field can contain any data structures. An <code>.info</code> field was added to arguments as well.</p></li>
<li><p>Bug fixes for using Viash with podman, Nextflow&gt;=22.10 and R&lt;4.0.</p></li>
<li><p>Experimental support for inheriting from config partials.</p></li>
</ul>
<section id="full-changelog" class="level2">
<h2 class="anchored" data-anchor-id="full-changelog">Full changelog</h2>
<section id="major-changes" class="level3">
<h3 class="anchored" data-anchor-id="major-changes">MAJOR CHANGES</h3>
<ul>
<li><p><code>Config</code>: Made major internal changes w.r.t. how config files are read and at which point a platform (native, docker, nextflow) is applied to the functionality script. The only visible side effect is that <code>viash ns list</code> will output each config only once instead of multiple times.</p></li>
<li><p><code>Functionality</code>: Structured annotation can be added to a functionality and its arguments using the <code>info</code> field. Example:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb1-1"><span class="fu" style="color: #4758AB;">functionality</span><span class="kw" style="color: #003B4F;">:</span></span>
<span id="cb1-2"><span class="at" style="color: #657422;">  </span><span class="fu" style="color: #4758AB;">name</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> foo</span></span>
<span id="cb1-3"><span class="at" style="color: #657422;">  </span><span class="fu" style="color: #4758AB;">info</span><span class="kw" style="color: #003B4F;">:</span></span>
<span id="cb1-4"><span class="at" style="color: #657422;">    </span><span class="fu" style="color: #4758AB;">site</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> https://abc.xyz</span></span>
<span id="cb1-5"><span class="at" style="color: #657422;">    </span><span class="fu" style="color: #4758AB;">tags</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> </span><span class="kw" style="color: #003B4F;">[</span><span class="at" style="color: #657422;"> one</span><span class="kw" style="color: #003B4F;">,</span><span class="at" style="color: #657422;"> two</span><span class="kw" style="color: #003B4F;">,</span><span class="at" style="color: #657422;"> three </span><span class="kw" style="color: #003B4F;">]</span></span>
<span id="cb1-6"><span class="at" style="color: #657422;">  </span><span class="fu" style="color: #4758AB;">arguments</span><span class="kw" style="color: #003B4F;">:</span></span>
<span id="cb1-7"><span class="at" style="color: #657422;">    </span><span class="kw" style="color: #003B4F;">-</span><span class="at" style="color: #657422;"> </span><span class="fu" style="color: #4758AB;">name</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> --foo</span></span>
<span id="cb1-8"><span class="at" style="color: #657422;">      </span><span class="fu" style="color: #4758AB;">type</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> string</span></span>
<span id="cb1-9"><span class="at" style="color: #657422;">      </span><span class="fu" style="color: #4758AB;">info</span><span class="kw" style="color: #003B4F;">:</span></span>
<span id="cb1-10"><span class="at" style="color: #657422;">        </span><span class="fu" style="color: #4758AB;">foo</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> bar</span></span>
<span id="cb1-11"><span class="at" style="color: #657422;">        </span><span class="fu" style="color: #4758AB;">a</span><span class="kw" style="color: #003B4F;">:</span></span>
<span id="cb1-12"><span class="at" style="color: #657422;">          </span><span class="fu" style="color: #4758AB;">b</span><span class="kw" style="color: #003B4F;">:</span></span>
<span id="cb1-13"><span class="at" style="color: #657422;">            c</span></span></code></pre></div></li>
</ul>
</section>
<section id="minor-changes" class="level3">
<h3 class="anchored" data-anchor-id="minor-changes">MINOR CHANGES</h3>
<ul>
<li><p><code>BashWrapper</code>: Allow printing the executor command by adding <code>---verbose ---verbose</code> to a <code>viash run</code> or an executable.</p></li>
<li><p><code>Testbenches</code>: Rework <code>MainBuildAuxiliaryNativeParameterCheck</code> to create stimulus files and loop over the file from bash instead of looping natively. This prevents creating thousands of new processes which would only test a single parameter. Note this still calls the main script for each stimulus separately, but that was the case anyway, only much much worse.</p></li>
<li><p><code>Testbenches</code>: Split some grouped test benches into slightly smaller test benches that group tested functionality better.</p></li>
<li><p><code>Annotations</code>: Complete the config schema annotations. Make sure all arguments are documented. Added an annotation <code>internalFunctionality</code> and <code>undocumented</code> for arguments that should not be documented. Added a testbench that verifies that all arguments are in fact annotated, skipping those that are not in the class constructor. Adds a hierarchy field in the <code>__this__</code> member to list the relation of the own and parent classes.</p></li>
<li><p><code>viash ns exec</code>: Allow choosing whether the <code>{platform}</code> field should be filled in, based on the <code>--apply_platform</code> parameter.</p></li>
</ul>
</section>
<section id="bug-fixes" class="level3">
<h3 class="anchored" data-anchor-id="bug-fixes">BUG FIXES</h3>
<ul>
<li><p><code>DockerPlatform</code>: Remove duplicate auto-mounts (#257).</p></li>
<li><p><code>NextflowVDSL3Platform</code>: Fix ‘Module scriptPath has not been defined yet’ error when Nextflow&gt;=22.10 (#269).</p></li>
<li><p><code>config inject</code>: Doesn’t work when <code>must_exist == true</code> (#273).</p></li>
<li><p><code>RScript</code>: Fix compatibility issue where the new character escaping in <code>r_script</code> required R&gt;=4.0 (#275). Escaping is now handled without using the new <code>r'(foo)'</code> notation.</p></li>
</ul>
</section>
<section id="deprecation" class="level3">
<h3 class="anchored" data-anchor-id="deprecation">DEPRECATION</h3>
<ul>
<li><p><code>DockerRequirements</code>: The <code>resources:</code> setting has been deprecated and will be removed in Viash 0.7.0. Please use <code>copy:</code> instead.</p></li>
<li><p><code>DockerRequirements</code>: The <code>privileged:</code> setting has been deprecated and will be removed in Viash 0.7.0. Please use <code>run_args: "--privileged"</code> instead.</p></li>
</ul>
</section>
<section id="experimental-functionality" class="level3">
<h3 class="anchored" data-anchor-id="experimental-functionality">EXPERIMENTAL FUNCTIONALITY</h3>
<ul>
<li><p><code>Config</code>: Any part of a Viash config can use inheritance to fill data (#259). For example: Contents of <code>src/test/config.vsh.yaml</code>:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb2-1"><span class="fu" style="color: #4758AB;">__inherits__</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> ../api/base.yaml</span></span>
<span id="cb2-2"><span class="fu" style="color: #4758AB;">functionality</span><span class="kw" style="color: #003B4F;">:</span></span>
<span id="cb2-3"><span class="at" style="color: #657422;">  </span><span class="fu" style="color: #4758AB;">name</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> test</span></span>
<span id="cb2-4"><span class="at" style="color: #657422;">  </span><span class="fu" style="color: #4758AB;">resources</span><span class="kw" style="color: #003B4F;">:</span></span>
<span id="cb2-5"><span class="at" style="color: #657422;">    </span><span class="kw" style="color: #003B4F;">-</span><span class="at" style="color: #657422;"> </span><span class="fu" style="color: #4758AB;">type</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> bash_script</span></span>
<span id="cb2-6"><span class="at" style="color: #657422;">      </span><span class="fu" style="color: #4758AB;">path</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> script.sh</span></span>
<span id="cb2-7"><span class="fu" style="color: #4758AB;">      text</span><span class="kw" style="color: #003B4F;">: </span><span class="ch" style="color: #20794D;">|</span></span>
<span id="cb2-8">        echo Copying $par_input to $par_output</span>
<span id="cb2-9">        cp $par_input $par_output</span></code></pre></div>
<p>Contents of <code>src/api/base.yaml</code>:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb3-1"><span class="fu" style="color: #4758AB;">functionality</span><span class="kw" style="color: #003B4F;">:</span></span>
<span id="cb3-2"><span class="at" style="color: #657422;">  </span><span class="fu" style="color: #4758AB;">arguments</span><span class="kw" style="color: #003B4F;">:</span></span>
<span id="cb3-3"><span class="at" style="color: #657422;">    </span><span class="kw" style="color: #003B4F;">-</span><span class="at" style="color: #657422;"> </span><span class="fu" style="color: #4758AB;">name</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> </span><span class="st" style="color: #20794D;">"--input"</span></span>
<span id="cb3-4"><span class="at" style="color: #657422;">      </span><span class="fu" style="color: #4758AB;">type</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> file</span></span>
<span id="cb3-5"><span class="at" style="color: #657422;">    </span><span class="kw" style="color: #003B4F;">-</span><span class="at" style="color: #657422;"> </span><span class="fu" style="color: #4758AB;">name</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> </span><span class="st" style="color: #20794D;">"--output"</span></span>
<span id="cb3-6"><span class="at" style="color: #657422;">      </span><span class="fu" style="color: #4758AB;">type</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> file</span></span>
<span id="cb3-7"><span class="at" style="color: #657422;">      </span><span class="fu" style="color: #4758AB;">direction</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> output</span></span></code></pre></div>
<p>The resulting yaml will be:</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb4-1"><span class="fu" style="color: #4758AB;">functionality</span><span class="kw" style="color: #003B4F;">:</span></span>
<span id="cb4-2"><span class="at" style="color: #657422;">  </span><span class="fu" style="color: #4758AB;">name</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> test</span></span>
<span id="cb4-3"><span class="at" style="color: #657422;">  </span><span class="fu" style="color: #4758AB;">arguments</span><span class="kw" style="color: #003B4F;">:</span></span>
<span id="cb4-4"><span class="at" style="color: #657422;">    </span><span class="kw" style="color: #003B4F;">-</span><span class="at" style="color: #657422;"> </span><span class="fu" style="color: #4758AB;">name</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> </span><span class="st" style="color: #20794D;">"--input"</span></span>
<span id="cb4-5"><span class="at" style="color: #657422;">      </span><span class="fu" style="color: #4758AB;">type</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> file</span></span>
<span id="cb4-6"><span class="at" style="color: #657422;">    </span><span class="kw" style="color: #003B4F;">-</span><span class="at" style="color: #657422;"> </span><span class="fu" style="color: #4758AB;">name</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> </span><span class="st" style="color: #20794D;">"--output"</span></span>
<span id="cb4-7"><span class="at" style="color: #657422;">      </span><span class="fu" style="color: #4758AB;">type</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> file</span></span>
<span id="cb4-8"><span class="at" style="color: #657422;">      </span><span class="fu" style="color: #4758AB;">direction</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> output</span></span>
<span id="cb4-9"><span class="at" style="color: #657422;">  </span><span class="fu" style="color: #4758AB;">resources</span><span class="kw" style="color: #003B4F;">:</span></span>
<span id="cb4-10"><span class="at" style="color: #657422;">    </span><span class="kw" style="color: #003B4F;">-</span><span class="at" style="color: #657422;"> </span><span class="fu" style="color: #4758AB;">type</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> bash_script</span></span>
<span id="cb4-11"><span class="at" style="color: #657422;">      </span><span class="fu" style="color: #4758AB;">path</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> script.sh</span></span>
<span id="cb4-12"><span class="fu" style="color: #4758AB;">      text</span><span class="kw" style="color: #003B4F;">: </span><span class="ch" style="color: #20794D;">|</span></span>
<span id="cb4-13">        echo Copying $par_input to $par_output</span>
<span id="cb4-14">        cp $par_input $par_output</span></code></pre></div></li>
</ul>


</section>
</section>

 ]]></description>
  <category>New Release</category>
  <guid>https://viash.io/blog/posts/viash-0.6.3/index.html</guid>
  <pubDate>Wed, 09 Nov 2022 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Viash 0.6.2</title>
  <dc:creator>Viash Team</dc:creator>
  <link>https://viash.io/blog/posts/viash-0.6.2/index.html</link>
  <description><![CDATA[ 




<p>This is a quick release to push two bug fixes related to security and being able to run Nextflow with optional output files.</p>
<section id="full-changelog" class="level2">
<h2 class="anchored" data-anchor-id="full-changelog">Full changelog</h2>
<section id="bug-fixes" class="level3">
<h3 class="anchored" data-anchor-id="bug-fixes">BUG FIXES</h3>
<ul>
<li><p><code>Git</code>: Strip credentials from remote repositories when retrieving the path.</p></li>
<li><p><code>VDSL3</code>: Allow optional output files to be <code>null</code>.</p></li>
</ul>


</section>
</section>

 ]]></description>
  <category>New Release</category>
  <guid>https://viash.io/blog/posts/viash-0.6.2/index.html</guid>
  <pubDate>Tue, 11 Oct 2022 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Viash 0.6.1</title>
  <dc:creator>Viash Team</dc:creator>
  <link>https://viash.io/blog/posts/viash-0.6.1/index.html</link>
  <description><![CDATA[ 




<p>This release contains mostly minor improvements of functionality released in Viash 0.6.0. Most notably:</p>
<ul>
<li><p>Support was added for <code>type: long</code> arguments</p></li>
<li><p><code>meta["n_proc"]</code> has been renamed to <code>meta["cpus"]</code>. <code>meta["cpus"]</code> is now an integer, whereas <code>meta["memory_*"]</code> are now longs.</p></li>
<li><p><code>viash ns exec</code> is able to recognise <code>{platform}</code> and <code>{namespace}</code> fields.</p></li>
<li><p>And various bug fixes and improvements to documentation and unit testing.</p></li>
</ul>
<section id="full-changelog" class="level2">
<h2 class="anchored" data-anchor-id="full-changelog">Full changelog</h2>
<section id="breaking-changes" class="level3">
<h3 class="anchored" data-anchor-id="breaking-changes">BREAKING CHANGES</h3>
<ul>
<li><p>Deprecated usage <code>resources_dir</code> variable inside scripts, use <code>meta["resources_dir"]</code> instead (or <code>$meta_resources_dir</code> in Bash, or <code>meta$resources_dir</code> in R).</p></li>
<li><p>Deprecated <code>meta["n_proc"]</code> in favour for <code>meta["cpus"]</code>.</p></li>
</ul>
</section>
<section id="new-functionality" class="level3">
<h3 class="anchored" data-anchor-id="new-functionality">NEW FUNCTIONALITY</h3>
<ul>
<li><p><code>viash ns exec</code>: Added two more fields:</p>
<ul>
<li><code>{platform}</code>: the platform name (if applicable)</li>
<li><code>{namespace}</code>: the namespace of the component</li>
</ul></li>
<li><p><code>LongArgument</code>: Added support for 64-bit integers with <code>type: long</code> as opposed to <code>type: integer</code> which are 32-bit integers.</p></li>
</ul>
</section>
<section id="major-changes" class="level3">
<h3 class="anchored" data-anchor-id="major-changes">MAJOR CHANGES</h3>
<ul>
<li>Allow passing integers/doubles/booleans to string parameters (#225). Removed the ‘Version’ helper class.</li>
</ul>
</section>
<section id="minor-changes" class="level3">
<h3 class="anchored" data-anchor-id="minor-changes">MINOR CHANGES</h3>
<ul>
<li><p><code>meta["cpus"]</code> is now an integer, <code>meta["memory_*"]</code> are now longs (#224).</p></li>
<li><p><code>DockerPlatform</code>: Only store author names in the authors metadata.</p></li>
<li><p><code>NextflowPlatform</code>: Only store author names in the authors metadata.</p></li>
<li><p><code>Argument[_]</code>: Turn <code>multiple_sep</code> from <code>Char</code> into <code>String</code>.</p></li>
</ul>
</section>
<section id="internal-changes" class="level3">
<h3 class="anchored" data-anchor-id="internal-changes">INTERNAL CHANGES</h3>
<ul>
<li><p>All <code>meta[...]</code> variables are now processed similar to <code>Argument[_]</code>s, instead of using custom code to convert object types and detect Docker mounts.</p></li>
<li><p><code>Escaper</code>: Make more generic Escaper helper class.</p></li>
</ul>
</section>
<section id="documentation" class="level3">
<h3 class="anchored" data-anchor-id="documentation">DOCUMENTATION</h3>
<ul>
<li><p>Hardcoded URLs pointing to viash.io in the documentation annotations were replaced with a new keyword system.</p></li>
<li><p>Replaced references to “DSL” with “Dynamic Config Modding” in the <code>--help</code> output.</p></li>
<li><p>Added an example for Ruby based Docker setups.</p></li>
</ul>
</section>
<section id="bug-fixes" class="level3">
<h3 class="anchored" data-anchor-id="bug-fixes">BUG FIXES</h3>
<ul>
<li><p><code>viash ns</code>: Reverse exit code outputs, was returning 1 when everything was OK and 0 when errors were detected (#227).</p></li>
<li><p><code>viash config inject</code>: Fix processing of arguments when argument groups are defined (#231).</p></li>
<li><p>Fixed a few typos in the CLI.</p></li>
<li><p>Fixed the formatting of <code>ns exec</code> documentation.</p></li>
<li><p><code>VDSL3</code>: Fix stub functionality.</p></li>
<li><p><code>VDSL3</code>: Fix error during error message.</p></li>
<li><p><code>viash test</code>: Fix issue where <code>VIASH_TEMP</code> could not be a relative directory when running <code>viash test</code> (#242).</p></li>
<li><p><code>BashScript</code>, <code>CSharpScript</code>, <code>JavaScriptScript</code>, <code>PythonScript</code>, <code>RScript</code>, <code>ScalaScript</code>: Fix quoting issues of certain characters (#113).</p></li>
</ul>
</section>
<section id="deprecation" class="level3">
<h3 class="anchored" data-anchor-id="deprecation">DEPRECATION</h3>
<ul>
<li><code>NextflowPlatform</code>: Deprecate <code>--param_list_format</code> parameter.</li>
</ul>
</section>
<section id="testing" class="level3">
<h3 class="anchored" data-anchor-id="testing">TESTING</h3>
<ul>
<li><p><code>BashScript</code>, <code>CSharpScript</code>, <code>JavaScriptScript</code>, <code>PythonScript</code>, <code>RScript</code>, <code>ScalaScript</code>: Implement more rigorous testing of which characters are escaped.</p></li>
<li><p><code>BashWrapper</code>: Escape usage of <code>multiple_sep</code>. This fixes various checks and transformations not working when when <code>multiple_sep</code> is set to <code>";"</code> (#235).</p></li>
</ul>


</section>
</section>

 ]]></description>
  <category>New Release</category>
  <guid>https://viash.io/blog/posts/viash-0.6.1/index.html</guid>
  <pubDate>Mon, 03 Oct 2022 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Viash 0.6.0</title>
  <dc:creator>Viash Team</dc:creator>
  <link>https://viash.io/blog/posts/viash-0.6.0/index.html</link>
  <description><![CDATA[ 




<section id="whats-new" class="level2">
<h2 class="anchored" data-anchor-id="whats-new">What’s new?</h2>
<p>This is a major release that contains a lot of new features and changes. Here are a few highlights:</p>
<ul>
<li><a href="../../../reference/config/platforms/NextflowVdsl3Platform.html">VDSL3</a> is now the default Nextflow platform</li>
<li>The <code>inputs</code> and <code>outputs</code> are now deprecated, use the more flexible argument groups instead</li>
<li>Arguments can now be added directly to argument groups instead of referencing arguments by name</li>
<li>The number of processes and amount of memory that are allowed to be used can now be included in the config</li>
<li>A new <code>viash ns exec</code> command has been added for executing arbitrary commands on all Viash components</li>
</ul>
<p>See the full changelog below for a breakdown of all changes.</p>
</section>
<section id="full-changelog" class="level2">
<h2 class="anchored" data-anchor-id="full-changelog">Full changelog</h2>
<section id="breaking-changes" class="level3">
<h3 class="anchored" data-anchor-id="breaking-changes">BREAKING CHANGES</h3>
<ul>
<li><p><code>NextflowPlatform</code>: <code>variant: vdsl3</code> is now the default NextflowPlatform. <code>variant: legacy</code> has been deprecated.</p></li>
<li><p><code>Functionality</code>: Fields <code>.inputs</code> and <code>.outputs</code> has been deprecated. Please use <code>.argument_groups</code> instead (#186). Before:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb1-1"><span class="fu" style="color: #4758AB;">functionality</span><span class="kw" style="color: #003B4F;">:</span></span>
<span id="cb1-2"><span class="at" style="color: #657422;">  </span><span class="fu" style="color: #4758AB;">inputs</span><span class="kw" style="color: #003B4F;">:</span></span>
<span id="cb1-3"><span class="at" style="color: #657422;">    </span><span class="kw" style="color: #003B4F;">-</span><span class="at" style="color: #657422;"> </span><span class="fu" style="color: #4758AB;">name</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> </span><span class="st" style="color: #20794D;">"--foo"</span></span>
<span id="cb1-4"><span class="at" style="color: #657422;">  </span><span class="fu" style="color: #4758AB;">outputs</span><span class="kw" style="color: #003B4F;">:</span></span>
<span id="cb1-5"><span class="at" style="color: #657422;">    </span><span class="kw" style="color: #003B4F;">-</span><span class="at" style="color: #657422;"> </span><span class="fu" style="color: #4758AB;">name</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> </span><span class="st" style="color: #20794D;">"--bar"</span></span></code></pre></div>
<p>Now:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb2-1"><span class="fu" style="color: #4758AB;">functionality</span><span class="kw" style="color: #003B4F;">:</span></span>
<span id="cb2-2"><span class="at" style="color: #657422;">  </span><span class="fu" style="color: #4758AB;">argument_groups</span><span class="kw" style="color: #003B4F;">:</span></span>
<span id="cb2-3"><span class="at" style="color: #657422;">    </span><span class="kw" style="color: #003B4F;">-</span><span class="at" style="color: #657422;"> </span><span class="fu" style="color: #4758AB;">name</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> Inputs</span></span>
<span id="cb2-4"><span class="at" style="color: #657422;">      </span><span class="fu" style="color: #4758AB;">arguments</span><span class="kw" style="color: #003B4F;">:</span></span>
<span id="cb2-5"><span class="at" style="color: #657422;">        </span><span class="kw" style="color: #003B4F;">-</span><span class="at" style="color: #657422;"> </span><span class="fu" style="color: #4758AB;">name</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> </span><span class="st" style="color: #20794D;">"--foo"</span></span>
<span id="cb2-6"><span class="at" style="color: #657422;">          </span><span class="fu" style="color: #4758AB;">type</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> file</span></span>
<span id="cb2-7"><span class="at" style="color: #657422;">    </span><span class="kw" style="color: #003B4F;">-</span><span class="at" style="color: #657422;"> </span><span class="fu" style="color: #4758AB;">name</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> Outputs</span></span>
<span id="cb2-8"><span class="at" style="color: #657422;">      </span><span class="fu" style="color: #4758AB;">arguments</span><span class="kw" style="color: #003B4F;">:</span></span>
<span id="cb2-9"><span class="at" style="color: #657422;">        </span><span class="kw" style="color: #003B4F;">-</span><span class="at" style="color: #657422;"> </span><span class="fu" style="color: #4758AB;">name</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> </span><span class="st" style="color: #20794D;">"--bar"</span></span>
<span id="cb2-10"><span class="at" style="color: #657422;">          </span><span class="fu" style="color: #4758AB;">type</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> file</span></span>
<span id="cb2-11"><span class="at" style="color: #657422;">          </span><span class="fu" style="color: #4758AB;">direction</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> output</span></span></code></pre></div></li>
<li><p>Passing strings to an argument group’s arguments has been deprecated. Please simply copy the argument itself into the argument group (#186). Before:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb3-1"><span class="fu" style="color: #4758AB;">functionality</span><span class="kw" style="color: #003B4F;">:</span></span>
<span id="cb3-2"><span class="at" style="color: #657422;">  </span><span class="fu" style="color: #4758AB;">arguments</span><span class="kw" style="color: #003B4F;">:</span></span>
<span id="cb3-3"><span class="at" style="color: #657422;">    </span><span class="kw" style="color: #003B4F;">-</span><span class="at" style="color: #657422;"> </span><span class="fu" style="color: #4758AB;">name</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> </span><span class="st" style="color: #20794D;">"--foo"</span></span>
<span id="cb3-4"><span class="at" style="color: #657422;">      </span><span class="fu" style="color: #4758AB;">type</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> file</span></span>
<span id="cb3-5"><span class="at" style="color: #657422;">    </span><span class="kw" style="color: #003B4F;">-</span><span class="at" style="color: #657422;"> </span><span class="fu" style="color: #4758AB;">name</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> </span><span class="st" style="color: #20794D;">"--bar"</span></span>
<span id="cb3-6"><span class="at" style="color: #657422;">      </span><span class="fu" style="color: #4758AB;">type</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> file</span></span>
<span id="cb3-7"><span class="at" style="color: #657422;">      </span><span class="fu" style="color: #4758AB;">direction</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> output</span></span>
<span id="cb3-8"><span class="at" style="color: #657422;">  </span><span class="fu" style="color: #4758AB;">argument_groups</span><span class="kw" style="color: #003B4F;">:</span></span>
<span id="cb3-9"><span class="at" style="color: #657422;">    </span><span class="kw" style="color: #003B4F;">-</span><span class="at" style="color: #657422;"> </span><span class="fu" style="color: #4758AB;">name</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> Inputs</span></span>
<span id="cb3-10"><span class="at" style="color: #657422;">      </span><span class="fu" style="color: #4758AB;">arguments</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> </span><span class="kw" style="color: #003B4F;">[</span><span class="at" style="color: #657422;"> foo </span><span class="kw" style="color: #003B4F;">]</span></span>
<span id="cb3-11"><span class="at" style="color: #657422;">    </span><span class="kw" style="color: #003B4F;">-</span><span class="at" style="color: #657422;"> </span><span class="fu" style="color: #4758AB;">name</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> Outputs</span></span>
<span id="cb3-12"><span class="at" style="color: #657422;">      </span><span class="fu" style="color: #4758AB;">arguments</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> </span><span class="kw" style="color: #003B4F;">[</span><span class="at" style="color: #657422;"> bar </span><span class="kw" style="color: #003B4F;">]</span></span></code></pre></div>
<p>Now:</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb4-1"><span class="fu" style="color: #4758AB;">functionality</span><span class="kw" style="color: #003B4F;">:</span></span>
<span id="cb4-2"><span class="at" style="color: #657422;">  </span><span class="fu" style="color: #4758AB;">argument_groups</span><span class="kw" style="color: #003B4F;">:</span></span>
<span id="cb4-3"><span class="at" style="color: #657422;">    </span><span class="kw" style="color: #003B4F;">-</span><span class="at" style="color: #657422;"> </span><span class="fu" style="color: #4758AB;">name</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> Inputs</span></span>
<span id="cb4-4"><span class="at" style="color: #657422;">      </span><span class="fu" style="color: #4758AB;">arguments</span><span class="kw" style="color: #003B4F;">:</span></span>
<span id="cb4-5"><span class="at" style="color: #657422;">        </span><span class="kw" style="color: #003B4F;">-</span><span class="at" style="color: #657422;"> </span><span class="fu" style="color: #4758AB;">name</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> </span><span class="st" style="color: #20794D;">"--foo"</span></span>
<span id="cb4-6"><span class="at" style="color: #657422;">          </span><span class="fu" style="color: #4758AB;">type</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> file</span></span>
<span id="cb4-7"><span class="at" style="color: #657422;">    </span><span class="kw" style="color: #003B4F;">-</span><span class="at" style="color: #657422;"> </span><span class="fu" style="color: #4758AB;">name</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> Outputs</span></span>
<span id="cb4-8"><span class="at" style="color: #657422;">      </span><span class="fu" style="color: #4758AB;">arguments</span><span class="kw" style="color: #003B4F;">:</span></span>
<span id="cb4-9"><span class="at" style="color: #657422;">        </span><span class="kw" style="color: #003B4F;">-</span><span class="at" style="color: #657422;"> </span><span class="fu" style="color: #4758AB;">name</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> </span><span class="st" style="color: #20794D;">"--bar"</span></span>
<span id="cb4-10"><span class="at" style="color: #657422;">          </span><span class="fu" style="color: #4758AB;">type</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> file</span></span>
<span id="cb4-11"><span class="at" style="color: #657422;">          </span><span class="fu" style="color: #4758AB;">direction</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> output</span></span></code></pre></div></li>
</ul>
</section>
<section id="new-functionality" class="level3">
<h3 class="anchored" data-anchor-id="new-functionality">NEW FUNCTIONALITY</h3>
<ul>
<li><p>Allow setting the number of processes and memory limit from within the Viash config, as well as a list of required commands. Example:</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb5-1"><span class="fu" style="color: #4758AB;">functionality</span><span class="kw" style="color: #003B4F;">:</span></span>
<span id="cb5-2"><span class="fu" style="color: #4758AB;">name</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> foo</span></span>
<span id="cb5-3"><span class="fu" style="color: #4758AB;">requirements</span><span class="kw" style="color: #003B4F;">:</span></span>
<span id="cb5-4"><span class="at" style="color: #657422;">  </span><span class="fu" style="color: #4758AB;">n_proc</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> </span><span class="dv" style="color: #AD0000;">10</span></span>
<span id="cb5-5"><span class="at" style="color: #657422;">  </span><span class="fu" style="color: #4758AB;">memory</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> 10G</span></span>
<span id="cb5-6"><span class="at" style="color: #657422;">  </span><span class="fu" style="color: #4758AB;">commands</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> </span><span class="kw" style="color: #003B4F;">[</span><span class="at" style="color: #657422;"> bash</span><span class="kw" style="color: #003B4F;">,</span><span class="at" style="color: #657422;"> r</span><span class="kw" style="color: #003B4F;">,</span><span class="at" style="color: #657422;"> perl </span><span class="kw" style="color: #003B4F;">]</span></span></code></pre></div>
<p>You can override the default requirements at runtime:</p>
<ul>
<li><code>./foo ---n_proc 4 ---memory 100pb</code> (for NativePlatform or DockerPlatform)</li>
<li>By adding <code>process.cpus = 4</code> and <code>process.memory "100 PB"</code> to a nextflow.config (for NextflowPlatform)</li>
</ul>
<p>This results the following meta variables to be injected into a script:</p>
<ul>
<li><code>meta_n_proc</code> (in Bash) or <code>meta["n_proc"]</code> (in any other language): Number of processes the script is allowed to spawn.</li>
<li><code>meta_memory_b</code> (in Bash) or <code>meta["memory_b"]</code> (in any other language): Amount of memory the script is allowed to allocate, in bytes.</li>
<li><code>meta_memory_kb</code> (in Bash) or <code>meta["memory_kb"]</code> (in any other language): Same but in kilobytes, rounded up.</li>
<li><code>meta_memory_mb</code> (in Bash) or <code>meta["memory_mb"]</code> (in any other language): Same but in megabytes, rounded up.</li>
<li><code>meta_memory_gb</code> (in Bash) or <code>meta["memory_gb"]</code> (in any other language): Same but in gigabytes, rounded up.</li>
<li><code>meta_memory_tb</code> (in Bash) or <code>meta["memory_tb"]</code> (in any other language): Same but in terabytes, rounded up.</li>
<li><code>meta_memory_pb</code> (in Bash) or <code>meta["memory_pb"]</code> (in any other language): Same but in petabytes, rounded up.</li>
</ul></li>
<li><p><code>viash ns exec</code>: Added a command for executing arbitrary commands for all found Viash components. The syntax of this command is inspired by <code>find . -exec echo {} \;</code>.</p>
<p>The following fields are automatically replaced:</p>
<ul>
<li><code>{}</code> | <code>{path}</code>: path to the config file</li>
<li><code>{abs-path}</code>: absolute path to the config file</li>
<li><code>{dir}</code>: path to the parent directory of the config file</li>
<li><code>{abs-dir}</code>: absolute path to the directory of the config file</li>
<li><code>{main-script}</code>: path to the main script (if any)</li>
<li><code>{abs-main-script}</code>: absolute path to the main script (if any)</li>
<li><code>{functionality-name}</code>: name of the component</li>
</ul>
<p>A command suffixed by <code>\;</code> (or nothing) will execute one command for each of the Viash components, whereas a command suffixed by <code>+</code> will execute one command for all Viash components.</p></li>
<li><p><code>ConfigMod</code>: Added a <code>del(...)</code> config mod to be able to delete a value from the yaml. Example: <code>del(.functionality.version)</code>.</p></li>
</ul>
</section>
<section id="major-changes" class="level3">
<h3 class="anchored" data-anchor-id="major-changes">MAJOR CHANGES</h3>
<ul>
<li><p><code>Folder structure</code>: Adjusted the folder structure to correctly reflect the the namespace change of viash from <code>com.dataintuitive.viash</code> to <code>io.viash</code>.</p></li>
<li><p><code>Functionality</code>: Reworked the <code>enabled</code> field from boolean to a <code>status</code> field which can have the following statusses: <code>enabled</code>, <code>disabled</code> and <code>deprecated</code>. When parsing a config file which has the <code>status</code> field set to <code>deprecated</code> a warning message is displayed on stderr. Backwards for <code>enabled</code> is provided where <code>enabled: true</code> =&gt; <code>status: enabled</code> and <code>enabled: false</code> =&gt; <code>status: false</code>. The <code>enabled</code> field is marked deprecated.</p></li>
</ul>
</section>
<section id="minor-changes" class="level3">
<h3 class="anchored" data-anchor-id="minor-changes">MINOR CHANGES</h3>
<ul>
<li><p><code>Resources</code>: Handle edge case when no resources are specified in the <code>vsh.yaml</code> config file and display a warning message.</p></li>
<li><p><code>BashWrapper</code>: Add a warning when an argument containing flags (e.g.&nbsp;<code>--foo</code>) is not recognized and will be handled as a positional argument as this is likely a mistake.</p></li>
<li><p><code>Functionality</code>: Add check to verify there are no double argument names or short names in the config <code>vsh.yaml</code> declarations.</p></li>
<li><p><code>BashWrapper</code>: Add check to verify a parameter isn’t declared twice on the CLI, except in the case <code>multiple: true</code> is declared as then it’s a valid use case.</p></li>
<li><p><code>BashWrapper</code>: For int min/max checking: use native bash functionality so there is no dependency to <code>bc</code>. For double min/max checking: add fallback code to use <code>awk</code> in case <code>bc</code> is not present on the system (most likely to happen when running tests in a docker container).</p></li>
<li><p><code>viash ns list/viash config view</code>: Allow viewing the post-processed argument groups by passing the <code>--parse_argument_groups</code> parameter.</p></li>
</ul>
</section>
<section id="testing" class="level3">
<h3 class="anchored" data-anchor-id="testing">TESTING</h3>
<ul>
<li><p><code>ConfigMod</code>: Added unit tests for condition config mods.</p></li>
<li><p><code>MainTestDockerSuite</code>: Derive config alternatives from the base <code>vsh.yaml</code> instead of adding the changes in separate files. This both reduces file clutter and prevents having to change several files when there are updates in the config format.</p></li>
<li><p><code>GitTest</code>: Added unit tests for Git helper (#216).</p></li>
</ul>
</section>
<section id="bug-fixes" class="level3">
<h3 class="anchored" data-anchor-id="bug-fixes">BUG FIXES</h3>
<ul>
<li><p><code>csharp_script</code>, <code>javascript_script</code>, <code>python_script</code>, <code>r_script</code>, <code>scala_script</code>: Make meta fields for <code>memory</code> and <code>n_proc</code> optional.</p></li>
<li><p><code>NextflowVdsl3Platform</code>: Don’t generate an error when <code>--publish_dir</code> is not defined and <code>-profile no_publish</code> is used.</p></li>
<li><p><code>Viash run</code>: Viash now properly returns the exit code from the executed script.</p></li>
<li><p><code>Git</code>: Fix incorrect metadata when git repository is empty (#216).</p></li>
</ul>


</section>
</section>

 ]]></description>
  <category>New Release</category>
  <guid>https://viash.io/blog/posts/viash-0.6.0/index.html</guid>
  <pubDate>Wed, 07 Sep 2022 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Viash 0.5.15</title>
  <dc:creator>Viash Team</dc:creator>
  <link>https://viash.io/blog/posts/viash-0.5.15/index.html</link>
  <description><![CDATA[ 




<section id="whats-new" class="level2">
<h2 class="anchored" data-anchor-id="whats-new">What’s new?</h2>
<p>This release introduces testbenches and new default argument groups: <code>Inputs</code>, <code>Outputs</code> and <code>Arguments</code>.</p>
</section>
<section id="full-changelog" class="level2">
<h2 class="anchored" data-anchor-id="full-changelog">Full changelog</h2>
<section id="breaking-changes" class="level3">
<h3 class="anchored" data-anchor-id="breaking-changes">BREAKING CHANGES</h3>
<ul>
<li><code>WorkflowHelper::helpMessage</code>: Now only takes one argument, namely the config.</li>
</ul>
</section>
<section id="major-changes" class="level3">
<h3 class="anchored" data-anchor-id="major-changes">MAJOR CHANGES</h3>
<ul>
<li><code>Namespace</code>: Changed the namespace of viash from <code>com.dataintuitive.viash</code> to <code>io.viash</code>.</li>
</ul>
</section>
<section id="minor-changes" class="level3">
<h3 class="anchored" data-anchor-id="minor-changes">MINOR CHANGES</h3>
<ul>
<li><p><code>Testbenches</code>: Add a testbench framework to test lots of character sequences, single or repeating to be tested in the yaml config. This can be used to later extend to other tests.</p></li>
<li><p><code>Testbenches::vdsl3</code>: Add testbenches to verify functionality:</p>
<ul>
<li>Vdsl3’s <code>param_list</code> (<code>yamlblob</code>, <code>yaml</code>, <code>json</code>, <code>csv</code>).</li>
<li>NextFlow’s own <code>params-file</code>.</li>
<li>Vdsl3’s recalculating resource file paths to be relative to the <code>param_list</code> file instead of the workflow file (only available for <code>yaml</code>, <code>json</code>, <code>csv</code>).</li>
<li>Vdsl3’s wrapping of modules to run these as a separate workflow automagically out of the box.</li>
</ul></li>
<li><p><code>Main</code>: Added <code>viash --schema_export</code> which outputs a schema of the Viash config file to console. This is to be used to automate populating the documentation website.</p></li>
<li><p><code>Helper</code>: Split help message by argument group.</p></li>
<li><p><code>Helper</code>: Remove unneeded arguments.</p></li>
<li><p><code>Functionality</code>: Add default groups <code>Inputs</code>, <code>Outputs</code> and <code>Arguments</code> for all arguments missing from user-defined <code>argument_groups</code>.</p></li>
<li><p><code>WorkflowHelper::helpMessage</code>: Rewrite to bring on par with Viash’s help message.</p></li>
</ul>
</section>
<section id="internal-changes" class="level3">
<h3 class="anchored" data-anchor-id="internal-changes">INTERNAL CHANGES</h3>
<ul>
<li><code>BooleanArguments</code>: Renamed internal class names for BooleanArguments to be better in line with how they are named in the config yaml. <code>BooleanArgumentRegular</code> -&gt; <code>BooleanArgument</code> (in line with <code>boolean</code>) <code>BooleanArgumentTrue</code> -&gt; <code>BooleanTrueArgument</code> (in line with <code>boolean_true</code>) <code>BooleanArgumentFalse</code> -&gt; <code>BooleanFalseArgument</code> (in line with <code>boolean_false</code>)</li>
</ul>
</section>
<section id="bug-fixes" class="level3">
<h3 class="anchored" data-anchor-id="bug-fixes">BUG FIXES</h3>
<ul>
<li><p><code>NextflowVdsl3Platform</code>: Change how <code>--id</code> is processed when a VDSL3 module is called from the CLI.</p></li>
<li><p><code>NextflowVdsl3Platform</code>: Fix error when param_list is <code>null</code>.</p></li>
<li><p><code>NextflowVdsl3Platform</code>: Fix error when optional, multiple arguments are set to <code>null</code>.</p></li>
<li><p><code>Testbenches</code>: Better capture expected error messages while running testbenches again. Code changes right before previous release re-introduced some of the messages.</p></li>
<li><p><code>NextflowVdsl3Platform</code>: Fix issue where optional parameters aren’t removed when <code>.run(args: [optarg: null])</code>.</p></li>
<li><p><code>WorkflowHelper::readCsv</code>: Treat empty values as undefined instead of throwing an error.</p></li>
<li><p><code>NextflowVdsl3Platform</code>: Use <code>$NXF_TEMP</code> or <code>$VIASH_TEMP</code> as temporary directory if the container engine is not set to <code>docker</code>, <code>podman</code> or <code>charlieengine</code>, else set to <code>/tmp</code>.</p></li>
<li><p><code>Resources</code>: When adding a resource folder, allow a trailing <code>/</code> at the end of the path. Previously this caused the target folder to be erased and the content of the resource folder to be written directly into the target folder.</p></li>
</ul>


</section>
</section>

 ]]></description>
  <category>New Release</category>
  <guid>https://viash.io/blog/posts/viash-0.5.15/index.html</guid>
  <pubDate>Thu, 14 Jul 2022 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Viash 0.5.14</title>
  <dc:creator>Viash Team</dc:creator>
  <link>https://viash.io/blog/posts/viash-0.5.14/index.html</link>
  <description><![CDATA[ 




<section id="whats-new" class="level2">
<h2 class="anchored" data-anchor-id="whats-new">What’s new?</h2>
<p>Argument groups allow for grouping arguments together by function or category, making the <code>--help</code> output a lot more clear for components with a lot of arguments.</p>
</section>
<section id="full-changelog" class="level2">
<h2 class="anchored" data-anchor-id="full-changelog">Full changelog</h2>
<section id="new-functionality" class="level3">
<h3 class="anchored" data-anchor-id="new-functionality">NEW FUNCTIONALITY</h3>
<ul>
<li><p><code>Functionality</code>: Allow specifying argument groups. Example:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb1-1"><span class="fu" style="color: #4758AB;">functionality</span><span class="kw" style="color: #003B4F;">:</span></span>
<span id="cb1-2"><span class="at" style="color: #657422;">  ...</span></span>
<span id="cb1-3"><span class="at" style="color: #657422;">  </span><span class="fu" style="color: #4758AB;">argument_groups</span><span class="kw" style="color: #003B4F;">:</span></span>
<span id="cb1-4"><span class="at" style="color: #657422;">    </span><span class="kw" style="color: #003B4F;">-</span><span class="at" style="color: #657422;"> </span><span class="fu" style="color: #4758AB;">name</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> First group</span></span>
<span id="cb1-5"><span class="at" style="color: #657422;">      </span><span class="fu" style="color: #4758AB;">arguments</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> </span><span class="kw" style="color: #003B4F;">[</span><span class="at" style="color: #657422;">foo</span><span class="kw" style="color: #003B4F;">,</span><span class="at" style="color: #657422;"> bar</span><span class="kw" style="color: #003B4F;">]</span></span>
<span id="cb1-6"><span class="at" style="color: #657422;">      </span><span class="fu" style="color: #4758AB;">description</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> Description</span></span></code></pre></div></li>
<li><p><code>NextflowVdsl3Platform</code>: Use <code>--param_list</code> to initialise a Nextflow channel with multiple parameter sets. Possible formats are csv, json, yaml, or simply a yaml_blob. A csv should have column names which correspond to the different arguments of this pipeline. A json or a yaml file should be a list of maps, each of which has keys corresponding to the arguments of the pipeline. A yaml blob can also be passed directly as a parameter. Inside the Nextflow pipeline code, params.params_list can also be used to directly a list of parameter sets. When passing a csv, json or yaml, relative path names are relativized to the location of the parameter file.</p>
<p>Examples:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="ex" style="color: null;">nextflow</span> run <span class="st" style="color: #20794D;">"target/foo/bar/main.nf"</span> <span class="at" style="color: #657422;">--param_list</span> <span class="st" style="color: #20794D;">'[{"id": "foo", "input": "/path/to/bar"}]'</span></span>
<span id="cb2-2"><span class="ex" style="color: null;">nextflow</span> run <span class="st" style="color: #20794D;">"target/foo/bar/main.nf"</span> <span class="at" style="color: #657422;">--param_list</span> <span class="st" style="color: #20794D;">"params.csv"</span> <span class="at" style="color: #657422;">--reference</span> <span class="st" style="color: #20794D;">"/path/to/ref"</span></span></code></pre></div></li>
</ul>
</section>
<section id="major-changes" class="level3">
<h3 class="anchored" data-anchor-id="major-changes">MAJOR CHANGES</h3>
<ul>
<li><p><code>NextflowVdsl3Platform</code>: The functionality is now slurped from a json instead of manually taking care of the formatting in Groovy.</p></li>
<li><p><code>NextflowVdsl3Platform</code>: The <code>--help</code> is auto-generated from the config.</p></li>
</ul>
</section>
<section id="minor-changes" class="level3">
<h3 class="anchored" data-anchor-id="minor-changes">MINOR CHANGES</h3>
<ul>
<li><p><code>NextflowVdsl3Platform</code>: Allow both <code>--publish_dir</code> and <code>--publishDir</code> when <code>auto.publish = true</code>.</p></li>
<li><p><code>NextflowVdsl3Platform</code>: Allow passing parameters with multiplicity &gt; 1 from Nextflow CLI.</p></li>
<li><p><code>Main</code>: Added <code>viash --cli_export</code> which outputs the internal cli construction information to console. This is to be used to automate populating the documentation website.</p></li>
<li><p><code>viash ns</code>: Display success and failure summary statistics, printed to stderr.</p></li>
<li><p><code>DataObject</code>: <code>.alternatives</code> is now a <code>OneOrMore[String]</code> instead of <code>List[String]</code>, meaning you can now specify <code>{ type: string, name: "--foo", alternatives: "-f" }</code> instead of <code>{ type: string, name: "--foo", alternatives: [ "-f" ] }</code></p></li>
<li><p><code>BashWrapper</code>: Added metadata field <code>meta_executable</code>, which is a shorthand notation for <code>meta_executable="$meta_resources_dir/$meta_functionality_name"</code></p></li>
</ul>
</section>
<section id="internal-changes" class="level3">
<h3 class="anchored" data-anchor-id="internal-changes">INTERNAL CHANGES</h3>
<ul>
<li><p><code>Arguments</code>: Internal naming of functionality.arguments is changed from DataObject to Arguments. Change is also applied to child classes, e.g.&nbsp;StringObject -&gt; StringArgument.</p></li>
<li><p><code>Script</code>: Allow more control over where injected code ends up.</p></li>
<li><p>Restructure type system to allow type-specific arguments.</p></li>
</ul>
</section>
<section id="bug-fixes" class="level3">
<h3 class="anchored" data-anchor-id="bug-fixes">BUG FIXES</h3>
<ul>
<li><p><code>DockerPlatform</code>: Change <code>org.opencontainers.image.version</code> annotation to <code>functionality.version</code> when set. Additionally fixed retrieving the git tag possibly returning <code>fatal: No names found, cannot describe anything.</code> or similar.</p></li>
<li><p><code>viash config inject</code>: Fix config inject when <code>.functionality.inputs</code> or <code>.functionality.outputs</code> is used.</p></li>
<li><p><code>BashWrapper</code>: Don’t add <code>bc</code> as dependency. Only perform integer/float min/max checks when bc is available, otherwise ignore.</p></li>
<li><p><code>DockerPlatform</code>: Fix inputs &amp; outputs arguments being present twice.</p></li>
<li><p><code>viash ns test</code>: Silently skip Nextflow platforms as these don’t support tests and will always fail.</p></li>
<li><p><code>Testbenches</code>: Better capture expected error messages while running testbenches. Having these show on the console could be confusing.</p></li>
<li><p><code>NextflowVdsl3Platform</code>: Fix issue when running multiple VDSL3 modules concurrently on the same channel.</p></li>
</ul>


</section>
</section>

 ]]></description>
  <category>New Release</category>
  <guid>https://viash.io/blog/posts/viash-0.5.14/index.html</guid>
  <pubDate>Thu, 30 Jun 2022 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Viash 0.5.13</title>
  <dc:creator>Viash Team</dc:creator>
  <link>https://viash.io/blog/posts/viash-0.5.13/index.html</link>
  <description><![CDATA[ 




<section id="whats-new" class="level2">
<h2 class="anchored" data-anchor-id="whats-new">What’s new?</h2>
<p>VDSL3 gets even more improvements and bug fixes. Read the full changelog below to see all of the changes.</p>
</section>
<section id="full-changelog" class="level2">
<h2 class="anchored" data-anchor-id="full-changelog">Full changelog</h2>
<section id="new-functionality" class="level3">
<h3 class="anchored" data-anchor-id="new-functionality">NEW FUNCTIONALITY</h3>
<ul>
<li><code>NextflowVdsl3Platform</code>: Allow overriding the container registry of all Viash components by setting the <code>params.override_container_registry</code> value. Only works for auto-derived image names.</li>
</ul>
</section>
<section id="minor-changes" class="level3">
<h3 class="anchored" data-anchor-id="minor-changes">MINOR CHANGES</h3>
<ul>
<li><p><code>Functionality</code> and <code>viash ns</code>: Added <code>.enabled</code> in functionality, set to <code>true</code> by default. Filter for disabled components in namespace commands.</p></li>
<li><p><code>DockerPlatform</code>: Add org.opencontainers.image annotations to built docker images.</p></li>
<li><p><code>Functionality</code>: when defining text resources, permit defining <code>path</code> instead of <code>dest</code>. If both <code>dest</code> and <code>path</code> are unset, use a default file name depending on the resource type, such as <code>script.sh</code> or <code>text.txt</code>.</p></li>
<li><p><code>viash build</code>: Errors are printed in red.</p></li>
</ul>
</section>
<section id="bug-fixes" class="level3">
<h3 class="anchored" data-anchor-id="bug-fixes">BUG FIXES</h3>
<ul>
<li><p><code>NextflowVdsl3Platform</code>: Undefined input files should not inject a <code>VIASH_PAR_*</code> variable when <code>multiple: true</code>.</p></li>
<li><p><code>NextflowVdsl3Platform</code>: Make injected resources dir absolute.</p></li>
<li><p><code>NextflowVdsl3Platform</code>: Fix escaping of triple single quotes.</p></li>
<li><p><code>NextflowVdsl3Platform</code>: Also apply auto.simplifyInput to Lists.</p></li>
</ul>


</section>
</section>

 ]]></description>
  <category>New Release</category>
  <guid>https://viash.io/blog/posts/viash-0.5.13/index.html</guid>
  <pubDate>Fri, 10 Jun 2022 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Viash 0.5.12</title>
  <dc:creator>Viash Team</dc:creator>
  <link>https://viash.io/blog/posts/viash-0.5.12/index.html</link>
  <description><![CDATA[ 




<section id="whats-new" class="level2">
<h2 class="anchored" data-anchor-id="whats-new">What’s new?</h2>
<p>This release contains a bunch improvements for VDSL3 and adds some parameters to the <code>viash test</code> and <code>viash test ns</code> commands.<br>
Read the full changelog below to see all of the changes.</p>
</section>
<section id="full-changelog" class="level2">
<h2 class="anchored" data-anchor-id="full-changelog">Full changelog</h2>
<section id="minor-changes" class="level3">
<h3 class="anchored" data-anchor-id="minor-changes">MINOR CHANGES</h3>
<ul>
<li><p><code>--help</code>: Don’t print “my_component <not versioned="">” when no version is specified, but instead simply “my_component”.</not></p></li>
<li><p><code>NextflowVdsl3Platform</code>: Set <code>mode=copy</code> for <code>auto.publish</code> and <code>auto.transcript</code>.</p></li>
<li><p><code>NextflowVdsl3Platform</code>: When a module is used multiple times in the same workflow, don’t throw an error anymore, instead simply generate a warning.</p></li>
<li><p><code>NextflowVdsl3Platform</code>: Throw an error when an input file was not found.</p></li>
<li><p><code>viash build</code>: Indent auto-generated code according the indentation of <code>VIASH START</code> when found.</p></li>
<li><p><code>Main</code>: Handle not finding the config file or resources in a config file better. Display a more helpful message instead of a stack trace.</p></li>
<li><p><code>BashWrapper</code>: Add checks on parameters for valid integer, double and boolean values.</p></li>
<li><p><code>BashWrapper</code>: Add option to limit string and integer values to specific choice values.</p></li>
<li><p><code>BashWrapper</code>: Add option to set min and max values for integer and double values.</p></li>
<li><p>Dependencies:</p>
<ul>
<li>Scala was upgraded from 2.12.10 to 2.12.15</li>
<li>sbt was upgraded from 1.3.4 to 1.6.1</li>
<li>sbt-scoverage was upgraded from 1.5.1 to 1.9.3</li>
</ul></li>
</ul>
</section>
<section id="bug-fixes" class="level3">
<h3 class="anchored" data-anchor-id="bug-fixes">BUG FIXES</h3>
<ul>
<li><p><code>viash_test</code>: Add back <code>--no_cache</code> parameter to <code>viash_test</code>.</p></li>
<li><p><code>viash_test</code>: Fix <code>--append</code> parameter for <code>viash_test</code>, was not getting passed through.</p></li>
<li><p><code>viash ns test</code>: Fix <code>--append</code> parameter, actually start from a clean file if append is false.</p></li>
<li><p><code>viash_push</code>: Fix component not being built during a release of Viash.</p></li>
<li><p><code>PythonRequirements</code>: Fix packages being mentioned twice in a Dockerfile.</p></li>
<li><p><code>Main</code>: Added support spaces in filenames of config files and resources</p></li>
<li><p><code>BashWrapper</code>: Display a message when the last parsed argument would require more values than are still available. Now display a message that values are missing, used to silently crash the wrapper.</p></li>
<li><p><code>viash config inject</code>: Fix error when file argument is <code>must_exist: true</code>.</p></li>
</ul>


</section>
</section>

 ]]></description>
  <category>New Release</category>
  <guid>https://viash.io/blog/posts/viash-0.5.12/index.html</guid>
  <pubDate>Tue, 24 May 2022 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Viash 0.5.11</title>
  <dc:creator>Viash Team</dc:creator>
  <link>https://viash.io/blog/posts/viash-0.5.11/index.html</link>
  <description><![CDATA[ 




<section id="whats-new" class="level2">
<h2 class="anchored" data-anchor-id="whats-new">What’s new?</h2>
<p>Viash 0.5.11 contains additional sugar syntax for specifying inputs and outputs in a Viash config, a beta implementation for the next-generation Viash platform, and several other minor improvements.</p>
<p>Read the full changelog below to see all of the changes.</p>
</section>
<section id="full-changelog" class="level2">
<h2 class="anchored" data-anchor-id="full-changelog">Full changelog</h2>
<section id="major-changes" class="level3">
<h3 class="anchored" data-anchor-id="major-changes">MAJOR CHANGES</h3>
<ul>
<li><code>Functionality</code>: Now also accepts ‘inputs’ and ‘outputs’ in addition to ‘arguments’. For inputs and outputs, any specified arguments will have default <code>type: file</code> and <code>direction: input</code> or <code>direction: output</code> respectively.</li>
</ul>
</section>
<section id="minor-changes" class="level3">
<h3 class="anchored" data-anchor-id="minor-changes">MINOR CHANGES</h3>
<ul>
<li><p><code>DockerPlatform</code>: Move description labels to the end of the Dockerfile to improve cross-component caching.</p></li>
<li><p><code>Functionality</code>: Arguments where <code>.multiple</code> is <code>true</code> can now have lists as <code>default</code> and <code>example</code>.</p></li>
<li><p><code>viash_build</code>: Added unit test for this component.</p></li>
<li><p><code>viash_test</code>: Added unit test for this component.</p></li>
<li><p><code>PythonRequirements</code>: Allow upgrading dependencies. Example: <code>[ type: python. pypi: anndata, upgrade: true ]</code>.</p></li>
<li><p><code>NextflowLegacyPlatform</code>: Remove annoying messages when building Nxf modules.</p></li>
<li><p><code>ConfigMods</code>: Expanded the DSL to allow specifying at which point to apply a config mod. This functionality was necessary to allow for setting fields which alter the way configs are parsed. Example of when this is useful: <code>&lt;preparse&gt; .platforms[.type == "nextflow"].variant := "vdsl3"</code>. Updating workflow of parsing a config file is:</p>
<ul>
<li>read Yaml from file</li>
<li>apply preparse config mods</li>
<li>parse resulting Json as Config, thereby instantiating default values etc.</li>
<li>convert Config back to Json</li>
<li>apply postparse config mods (original config mods)</li>
<li>convert final Json back to Config</li>
</ul></li>
</ul>
</section>
</section>
<section id="beta-functionality" class="level2">
<h2 class="anchored" data-anchor-id="beta-functionality">BETA FUNCTIONALITY</h2>
<ul>
<li><p><code>NextflowVdsl3Platform</code>: A beta implementation of the next-generation Viash+Nextflow platform. See https://github.com/viash-io/viash/issues/82 for more information. You can access the previous Nextflow platform by using the <code>variant</code> parameter:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb1-1"><span class="kw" style="color: #003B4F;">-</span><span class="at" style="color: #657422;"> </span><span class="fu" style="color: #4758AB;">type</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> nextflow</span></span>
<span id="cb1-2"><span class="at" style="color: #657422;">  </span><span class="fu" style="color: #4758AB;">variant</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> legacy</span></span>
<span id="cb1-3"><span class="at" style="color: #657422;">  </span><span class="fu" style="color: #4758AB;">separate_multiple_outputs</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> </span><span class="ch" style="color: #20794D;">false</span></span></code></pre></div></li>
</ul>
<section id="bug-fixes" class="level3">
<h3 class="anchored" data-anchor-id="bug-fixes">BUG FIXES</h3>
<ul>
<li><p><code>viash_build</code> and <code>viash_test</code>: The <code>query_name</code> and <code>query_namespace</code> arguments were switched around. These arguments are now passed correctly.</p></li>
<li><p><code>BashScript</code>, <code>JavaScriptScript</code>, <code>PythonScript</code>, <code>RScript</code>: Correctly escape <code>'</code> (#113). Update unit tests accordingly.</p></li>
<li><p><code>CSharpScript</code>, <code>ScalaScript</code>: Correctly escape <code>"</code> (#113). Update unit tests accordingly.</p></li>
<li><p><code>viash_build</code>, <code>viash_test</code>, <code>viash_push</code>: Don’t try to remove log files if they don’t exist.</p></li>
</ul>
</section>
<section id="internal-changes" class="level3">
<h3 class="anchored" data-anchor-id="internal-changes">INTERNAL CHANGES</h3>
<ul>
<li><code>DataObject</code>:
<ul>
<li>Renamed <code>otype</code> to <code>flags</code>.</li>
<li>Renamed <code>oType</code> to <code>type</code></li>
<li>Deprecated <code>tag</code> (unused feature).</li>
</ul></li>
<li>All abstract / inherited classes: Renamed <code>oType</code> to <code>type</code>.</li>
</ul>
</section>
<section id="deprecation" class="level3">
<h3 class="anchored" data-anchor-id="deprecation">DEPRECATION</h3>
<ul>
<li><code>Functionality</code>: Deprecated <code>function_type</code> and <code>add_resources_to_path</code>. These should be unused features, by now.</li>
</ul>


</section>
</section>

 ]]></description>
  <category>New Release</category>
  <guid>https://viash.io/blog/posts/viash-0.5.11/index.html</guid>
  <pubDate>Fri, 06 May 2022 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Viash 0.5.10</title>
  <dc:creator>Viash Team</dc:creator>
  <link>https://viash.io/blog/posts/viash-0.5.10/index.html</link>
  <description><![CDATA[ 




<section id="whats-new" class="level2">
<h2 class="anchored" data-anchor-id="whats-new">What’s new?</h2>
<p>The <code>viash_install</code>, <code>viash_build</code>, <code>viash_test</code> and <code>viash_push</code> components have been reworked. Read the full changelog below to see all of the changes.<br>
In addition, Viash 5.10.1 fixes a bug that prevented the correct passthrough of the new <code>organization</code> field</p>
</section>
<section id="full-changelog" class="level2">
<h2 class="anchored" data-anchor-id="full-changelog">Full changelog:</h2>
</section>
<section id="section" class="level2">
<h2 class="anchored" data-anchor-id="section">5.10</h2>
<section id="major-changes" class="level3">
<h3 class="anchored" data-anchor-id="major-changes">MAJOR CHANGES</h3>
<ul>
<li><code>viash_install</code>:
<ul>
<li>Added <code>--log_prefix</code>: This prefix is used to determine the path of the log files for <code>viash_build</code>, <code>viash_test</code> and <code>viash_push</code>.</li>
<li>Added <code>--organization</code>: Id of the organisation to be used in the Docker image name, i.e.&nbsp;<code>&lt;registry&gt;/&lt;organization&gt;/&lt;namespace&gt;&lt;namespace_sep&gt;&lt;name&gt;</code>.</li>
<li>Added <code>--target_image_source</code>: Url to the Git repo in which this project resides.</li>
<li>Removed <code>--log</code>.</li>
</ul></li>
<li><code>viash_build</code>:
<ul>
<li>Reduce code duplication by contructing the command with Bash Arrays.</li>
<li>Renamed <code>--platforms</code> to <code>--platform</code>.</li>
<li>Added <code>--organization</code>: Id of the organisation to be used in the Docker image name, i.e.&nbsp;<code>&lt;registry&gt;/&lt;organization&gt;/&lt;namespace&gt;&lt;namespace_sep&gt;&lt;name&gt;</code>.</li>
<li>Added <code>--target_image_source</code>: Url to the Git repo in which this project resides.</li>
<li>Changed default of <code>--log</code> from <code>log.txt</code> to <code>.viash_build_log.txt</code>.</li>
<li>Added <code>--verbose</code>: Print out the underlying <code>viash ns build</code> command before running it.</li>
</ul></li>
<li><code>viash_test</code>:
<ul>
<li>Reduce code duplication by contructing the command with Bash Arrays.</li>
<li>Renamed <code>--platforms</code> to <code>--platform</code>.</li>
<li>Added <code>--organization</code>: Id of the organisation to be used in the Docker image name, i.e.&nbsp;<code>&lt;registry&gt;/&lt;organization&gt;/&lt;namespace&gt;&lt;namespace_sep&gt;&lt;name&gt;</code>.</li>
<li>Added <code>--target_image_source</code>: Url to the Git repo in which this project resides.</li>
<li>Changed default of <code>--log</code> from <code>log.txt</code> to <code>.viash_test_log.txt</code>.</li>
<li>Changed default of <code>--tsv</code> from <code>log.tsv</code> to <code>.viash_test_log.tsv</code>.</li>
<li>Added <code>--verbose</code>: Print out the underlying <code>viash ns test</code> command before running it.</li>
</ul></li>
<li><code>viash_push</code>:
<ul>
<li>Reduce code duplication by contructing the command with Bash Arrays.</li>
<li>Added <code>--organization</code>: Id of the organisation to be used in the Docker image name, i.e.&nbsp;<code>&lt;registry&gt;/&lt;organization&gt;/&lt;namespace&gt;&lt;namespace_sep&gt;&lt;name&gt;</code>.</li>
<li>Changed default of <code>--log</code> from <code>log.txt</code> to <code>.viash_push_log.txt</code>.</li>
<li>Added <code>--verbose</code>: Print out the underlying <code>viash ns build</code> command before running it.</li>
</ul></li>
</ul>
</section>
<section id="minor-changes" class="level3">
<h3 class="anchored" data-anchor-id="minor-changes">MINOR CHANGES</h3>
<ul>
<li><code>NextflowPlatform</code>: Added the <code>organization</code> field to the nextflow platform as well.</li>
</ul>
</section>
</section>
<section id="section-1" class="level2">
<h2 class="anchored" data-anchor-id="section-1">5.10.1</h2>
<section id="bug-fix" class="level3">
<h3 class="anchored" data-anchor-id="bug-fix">BUG FIX</h3>
<ul>
<li><code>NextflowPlatform</code>: Fix passthrough of <code>organization</code> field.</li>
</ul>


</section>
</section>

 ]]></description>
  <category>New Release</category>
  <guid>https://viash.io/blog/posts/viash-0.5.10/index.html</guid>
  <pubDate>Mon, 21 Mar 2022 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Viash 0.5.9</title>
  <dc:creator>Viash Team</dc:creator>
  <link>https://viash.io/blog/posts/viash-0.5.9/index.html</link>
  <description><![CDATA[ 




<section id="whats-new" class="level2">
<h2 class="anchored" data-anchor-id="whats-new">What’s new?</h2>
<p>The biggest change in this release is that long running Viash components (VS Code server or R Studio server for example) can now be interrupted by pressing CTRL-C or by sending it an <code>INT</code> or <code>SIGINT</code> signal. Before this release, you had to manually stop the Docker container to get the component to terminate.</p>
<p>Read the full changelog below to see all of the changes.</p>
</section>
<section id="full-changelog" class="level2">
<h2 class="anchored" data-anchor-id="full-changelog">Full changelog:</h2>
<section id="new-features" class="level3">
<h3 class="anchored" data-anchor-id="new-features">NEW FEATURES</h3>
<ul>
<li><p><code>viash run</code>: A long running Viash component can be interrupted by pressing CTRL-C or by sending it an <code>INT</code> or <code>SIGINT</code> signal.</p></li>
<li><p><code>DockerPlatform</code>: Automatically add a few labels based on metadata to Dockerfile.</p></li>
<li><p><code>DockerPlatform</code>: Added value <code>target_image_source</code> for setting the source of the target image. This is used for defining labels in the dockerfile. Example:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb1-1"><span class="fu" style="color: #4758AB;">target_image_source</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> https://github.com/foo/bar</span></span></code></pre></div></li>
</ul>
</section>
<section id="minor-changes" class="level3">
<h3 class="anchored" data-anchor-id="minor-changes">MINOR CHANGES</h3>
<ul>
<li><p><code>viash ns list</code>: Added <code>--format yaml/json</code> argument to be able to return the output as a json as well. Useful for when <code>jq</code> is installed but <code>yq</code> is not. Example:</p>
<pre><code>  viash ns list -p docker -f json | jq '.[] | .info.config'</code></pre></li>
<li><p><code>viash config view</code>: Same as above.</p></li>
</ul>
</section>
<section id="deprecation" class="level3">
<h3 class="anchored" data-anchor-id="deprecation">DEPRECATION</h3>
<ul>
<li><p><code>CLI</code>: Deprecated <code>-P</code> flag use <code>-p</code> intead.</p></li>
<li><p><code>DockerPlatform</code>: Deprecated <code>version</code> value.</p></li>
</ul>


</section>
</section>

 ]]></description>
  <category>New Release</category>
  <guid>https://viash.io/blog/posts/viash-0.5.9/index.html</guid>
  <pubDate>Mon, 14 Mar 2022 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Viash 0.5.8</title>
  <dc:creator>Viash Team</dc:creator>
  <link>https://viash.io/blog/posts/viash-0.5.8/index.html</link>
  <description><![CDATA[ 




<section id="whats-new" class="level2">
<h2 class="anchored" data-anchor-id="whats-new">What’s new?</h2>
<p>See the full changelog below as examples have been added to most changes.</p>
</section>
<section id="full-changelog" class="level2">
<h2 class="anchored" data-anchor-id="full-changelog">Full changelog:</h2>
<section id="new-functionality" class="level3">
<h3 class="anchored" data-anchor-id="new-functionality">NEW FUNCTIONALITY</h3>
<ul>
<li><p><code>DockerPlatform</code>: Allow defining a container’s organisation. Example:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb1-1"><span class="at" style="color: #657422;">  </span><span class="kw" style="color: #003B4F;">-</span><span class="at" style="color: #657422;"> </span><span class="fu" style="color: #4758AB;">type</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> docker</span></span>
<span id="cb1-2"><span class="at" style="color: #657422;">    </span><span class="fu" style="color: #4758AB;">registry</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> ghcr.io</span></span>
<span id="cb1-3"><span class="at" style="color: #657422;">    </span><span class="fu" style="color: #4758AB;">organisation</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> viash-io</span></span>
<span id="cb1-4"><span class="at" style="color: #657422;">    </span><span class="fu" style="color: #4758AB;">image</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> viash</span></span>
<span id="cb1-5"><span class="at" style="color: #657422;">    </span><span class="fu" style="color: #4758AB;">tag</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> </span><span class="st" style="color: #20794D;">"1.0"</span></span>
<span id="cb1-6"><span class="at" style="color: #657422;">    </span><span class="fu" style="color: #4758AB;">target_registry</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> ghcr.io</span></span>
<span id="cb1-7"><span class="at" style="color: #657422;">    </span><span class="fu" style="color: #4758AB;">target_organization</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> viash-io</span></span></code></pre></div></li>
<li><p><code>DockerRequirement</code>: Add label instructions. Example: <code>setup: [ [ type: docker, label: [ "foo BAR" ]]]</code></p></li>
<li><p><code>Config</code>: In specific places, allow parsing a value as a list of values. Fixes #97. This mostly applies to list values in <code>DockerPlatform</code>, but also to author roles. Examples:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb2-1"><span class="fu" style="color: #4758AB;">functionality</span><span class="kw" style="color: #003B4F;">:</span></span>
<span id="cb2-2"><span class="at" style="color: #657422;">  </span><span class="fu" style="color: #4758AB;">name</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> foo</span></span>
<span id="cb2-3"><span class="at" style="color: #657422;">  </span><span class="fu" style="color: #4758AB;">authors</span><span class="kw" style="color: #003B4F;">:</span></span>
<span id="cb2-4"><span class="at" style="color: #657422;">    </span><span class="kw" style="color: #003B4F;">-</span><span class="at" style="color: #657422;"> </span><span class="fu" style="color: #4758AB;">name</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> Alice</span></span>
<span id="cb2-5"><span class="at" style="color: #657422;">      </span><span class="fu" style="color: #4758AB;">role</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> author</span><span class="co" style="color: #5E5E5E;"> # can be a string or a list</span></span>
<span id="cb2-6"><span class="fu" style="color: #4758AB;">platforms</span><span class="kw" style="color: #003B4F;">:</span></span>
<span id="cb2-7"><span class="at" style="color: #657422;">  </span><span class="kw" style="color: #003B4F;">-</span><span class="at" style="color: #657422;"> </span><span class="fu" style="color: #4758AB;">type</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> docker</span></span>
<span id="cb2-8"><span class="at" style="color: #657422;">    </span><span class="fu" style="color: #4758AB;">port</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> </span><span class="st" style="color: #20794D;">"80:80"</span><span class="co" style="color: #5E5E5E;"> # can be a string or a list</span></span>
<span id="cb2-9"><span class="at" style="color: #657422;">    </span><span class="fu" style="color: #4758AB;">setup</span><span class="kw" style="color: #003B4F;">:</span></span>
<span id="cb2-10"><span class="at" style="color: #657422;">      </span><span class="kw" style="color: #003B4F;">-</span><span class="at" style="color: #657422;"> </span><span class="fu" style="color: #4758AB;">type</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> r</span></span>
<span id="cb2-11"><span class="at" style="color: #657422;">        </span><span class="fu" style="color: #4758AB;">packages</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> incgraph</span><span class="co" style="color: #5E5E5E;"> # can be a string or a list</span></span></code></pre></div></li>
</ul>
</section>
<section id="breaking-changes" class="level3">
<h3 class="anchored" data-anchor-id="breaking-changes">BREAKING CHANGES</h3>
<ul>
<li><code>viash test</code>: This command doesn’t automatically add the resources dir to the path.</li>
</ul>
</section>
<section id="bug-fixes" class="level3">
<h3 class="anchored" data-anchor-id="bug-fixes">BUG FIXES</h3>
<ul>
<li><p><code>Functionality</code>: Fix <code>.functionality.add_resources_to_path</code> not being picked up correctly.</p></li>
<li><p><code>AptRequirement</code>: Set <code>DEBIAN_FRONTEND=noninteractive</code> by default. This can be turned off by specifying:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb3-1"><span class="at" style="color: #657422;">  </span><span class="kw" style="color: #003B4F;">-</span><span class="at" style="color: #657422;"> </span><span class="fu" style="color: #4758AB;">type</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> apt</span></span>
<span id="cb3-2"><span class="at" style="color: #657422;">    </span><span class="fu" style="color: #4758AB;">packages</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> </span><span class="kw" style="color: #003B4F;">[</span><span class="at" style="color: #657422;"> foo</span><span class="kw" style="color: #003B4F;">,</span><span class="at" style="color: #657422;"> bar </span><span class="kw" style="color: #003B4F;">]</span></span>
<span id="cb3-3"><span class="at" style="color: #657422;">    </span><span class="fu" style="color: #4758AB;">interactive</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> </span><span class="ch" style="color: #20794D;">true</span></span></code></pre></div></li>
</ul>
</section>
<section id="minor-changes" class="level3">
<h3 class="anchored" data-anchor-id="minor-changes">MINOR CHANGES</h3>
<ul>
<li><p><code>Main</code>: Slightly better error messages when parsing of viash yaml file fails. Before:</p>
<pre><code>$ viash test src/test/resources/testbash/config_failed_build.vsh.yaml 
Exception in thread "main" DecodingFailure(Unexpected field: [package]; valid fields: packages, interactive, type, List(DownField(apt), DownArray, DownField(platforms)))</code></pre>
<p>After:</p>
<pre><code>$ viash test src/test/resources/testbash/config_failed_build.vsh.yaml 
Error parsing 'file:///path/to/viash/src/test/resources/testbash/config_failed_build.vsh.yaml'. Details:
Unexpected field: [package]; valid fields: packages, interactive, type: DownField(apt),DownArray,DownField(platforms)</code></pre></li>
</ul>


</section>
</section>

 ]]></description>
  <category>New Release</category>
  <guid>https://viash.io/blog/posts/viash-0.5.8/index.html</guid>
  <pubDate>Fri, 04 Mar 2022 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Viash 0.5.7</title>
  <dc:creator>Viash Team</dc:creator>
  <link>https://viash.io/blog/posts/viash-0.5.7/index.html</link>
  <description><![CDATA[ 




<section id="whats-new" class="level2">
<h2 class="anchored" data-anchor-id="whats-new">What’s new?</h2>
<p>Here are some highlights of this release:</p>
<p>Examples for arguments now need to be of the same type as the argument itself. You can’t provide an <code>integer</code> for a <code>string</code>-based argument for example.<br>
A handy new command has been added: <code>viash config inject</code>. This can be used to inject a Viash header into a script based on the arguments of the <a href="../../../reference/config/index.html">config file</a>.</p>
<p>There have been some improvements to the Docker platform as well.<br>
You can now add yum packages as a requirement:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb1-1"><span class="fu" style="color: #4758AB;">platforms</span><span class="kw" style="color: #003B4F;">:</span></span>
<span id="cb1-2"><span class="at" style="color: #657422;">  </span><span class="kw" style="color: #003B4F;">-</span><span class="at" style="color: #657422;"> </span><span class="fu" style="color: #4758AB;">type</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> docker</span></span>
<span id="cb1-3"><span class="at" style="color: #657422;">    </span><span class="fu" style="color: #4758AB;">image</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> bash:latest</span></span>
<span id="cb1-4"><span class="at" style="color: #657422;">    </span><span class="fu" style="color: #4758AB;">setup</span><span class="kw" style="color: #003B4F;">:</span></span>
<span id="cb1-5"><span class="at" style="color: #657422;">      </span><span class="kw" style="color: #003B4F;">-</span><span class="at" style="color: #657422;"> </span><span class="fu" style="color: #4758AB;">type</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> yum</span></span>
<span id="cb1-6"><span class="at" style="color: #657422;">        </span><span class="fu" style="color: #4758AB;">packages</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> </span><span class="kw" style="color: #003B4F;">[</span><span class="at" style="color: #657422;"> wget </span><span class="kw" style="color: #003B4F;">]</span></span></code></pre></div>
<p>You can now include <a href="https://docs.docker.com/engine/reference/builder/#add">ADD</a> and <a href="https://docs.docker.com/engine/reference/builder/#copy">COPY</a> instructions in the <a href="../../../reference/config/index.html">config file</a>:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb2-1"><span class="fu" style="color: #4758AB;">platforms</span><span class="kw" style="color: #003B4F;">:</span></span>
<span id="cb2-2"><span class="at" style="color: #657422;">  </span><span class="kw" style="color: #003B4F;">-</span><span class="at" style="color: #657422;"> </span><span class="fu" style="color: #4758AB;">type</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> docker</span></span>
<span id="cb2-3"><span class="at" style="color: #657422;">    </span><span class="fu" style="color: #4758AB;">image</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> bash:latest</span></span>
<span id="cb2-4"><span class="at" style="color: #657422;">    </span><span class="fu" style="color: #4758AB;">setup</span><span class="kw" style="color: #003B4F;">:</span></span>
<span id="cb2-5"><span class="at" style="color: #657422;">      </span><span class="kw" style="color: #003B4F;">-</span><span class="at" style="color: #657422;"> </span><span class="fu" style="color: #4758AB;">type</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> docker</span></span>
<span id="cb2-6"><span class="at" style="color: #657422;">        </span><span class="fu" style="color: #4758AB;">add</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> </span><span class="kw" style="color: #003B4F;">[</span><span class="at" style="color: #657422;"> </span><span class="st" style="color: #20794D;">"http://foo.bar ."</span><span class="at" style="color: #657422;"> </span><span class="kw" style="color: #003B4F;">]</span></span></code></pre></div>
</section>
<section id="full-changelog" class="level2">
<h2 class="anchored" data-anchor-id="full-changelog">Full changelog:</h2>
<section id="breaking-changes" class="level3">
<h3 class="anchored" data-anchor-id="breaking-changes">BREAKING CHANGES</h3>
<ul>
<li><code>viash config</code>: An argument’s example now needs to be of the same type as the argument itself. For example, <code>[ type: integer, name: foo, example: 10 ]</code> is valid, whereas <code>[ type: integer, name: foo, example: bar ]</code> is not, as ‘bar’ cannot be cast to an integer.</li>
</ul>
</section>
<section id="new-functionality" class="level3">
<h3 class="anchored" data-anchor-id="new-functionality">NEW FUNCTIONALITY</h3>
<ul>
<li><p><code>viash config inject</code>: A command for inserting a Viash header into your script.</p></li>
<li><p><code>DockerPlatform</code>: Added a requirement setup for installing through yum. Example: <code>setup: [ [ type: yum, packages: [ wget] ] ]</code></p></li>
<li><p><code>DockerPlatform</code>: Allow using copy and add instructions. Example: <code>setup: [ [ type: docker, add: [ "http://foo.bar ." ]]]</code></p></li>
</ul>
</section>
<section id="bug-fixes" class="level3">
<h3 class="anchored" data-anchor-id="bug-fixes">BUG FIXES</h3>
<ul>
<li><p><code>ViashTest</code>: Fix verbosity passthrough.</p></li>
<li><p><code>--help</code>: Fix repeated usage flag when printing the help.</p></li>
</ul>


</section>
</section>

 ]]></description>
  <category>New Release</category>
  <guid>https://viash.io/blog/posts/viash-0.5.7/index.html</guid>
  <pubDate>Wed, 16 Feb 2022 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Viash 0.5.6</title>
  <dc:creator>Viash Team</dc:creator>
  <link>https://viash.io/blog/posts/viash-0.5.6/index.html</link>
  <description><![CDATA[ 




<section id="whats-new" class="level2">
<h2 class="anchored" data-anchor-id="whats-new">What’s new?</h2>
<p>Here are some highlights:</p>
<ul>
<li>Viash can now be installed without Docker needing to be installed on your system. You do need <code>unzip</code> and <code>wget</code> to complete the installation.</li>
<li>The Docker related messages are more user friendly now.</li>
</ul>
</section>
<section id="full-changelog" class="level2">
<h2 class="anchored" data-anchor-id="full-changelog">Full changelog:</h2>
<section id="breaking-changes" class="level3">
<h3 class="anchored" data-anchor-id="breaking-changes">BREAKING CHANGES</h3>
<ul>
<li><code>BashWrapper</code>: Forbidden flags <code>-v</code>, <code>--verbose</code>, <code>--verbosity</code> have been renamed to <code>---v</code>, <code>---verbose</code>, <code>---verbosity</code>.</li>
</ul>
</section>
<section id="minor-changes" class="level3">
<h3 class="anchored" data-anchor-id="minor-changes">MINOR CHANGES</h3>
<ul>
<li><p>Set version of helper scripts to the same version as Viash.</p></li>
<li><p><code>DockerPlatform</code>: Produce helpful warning message when Docker image can’t be found remotely (#94).</p></li>
<li><p><code>DockerPlatform</code>: Produce helpful error message when Docker isn’t installed or the daemon is not running (#94 bis).</p></li>
</ul>
</section>
<section id="bug-fixes" class="level3">
<h3 class="anchored" data-anchor-id="bug-fixes">BUG FIXES</h3>
<ul>
<li><p><code>viash_install</code>:</p>
<ul>
<li>Passing Viash path as a string instead of as a file to ensure the path is not converted to an absolute path</li>
<li>Switch from Docker backend to a Native backend, ‘unzip’ and ‘wget’ are required.</li>
<li>Correctly set the log file for viash_test.</li>
</ul></li>
<li><p><code>DockerPlatform</code>: Added sleep workaround to avoid concurrency issue where a file is executed to build docker containers but apparently still in the process of being written.</p></li>
<li><p><code>DockerPlatform</code>: Fix order issue of —verbose flag in combination with —setup, allowing to run <code>viash run config.vsh.yaml -- ---setup cb ---verbose</code> and actually get output.</p></li>
</ul>


</section>
</section>

 ]]></description>
  <category>New Release</category>
  <guid>https://viash.io/blog/posts/viash-0.5.6/index.html</guid>
  <pubDate>Thu, 03 Feb 2022 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Viash 0.5.5</title>
  <dc:creator>Viash Team</dc:creator>
  <link>https://viash.io/blog/posts/viash-0.5.5/index.html</link>
  <description><![CDATA[ 




<section id="whats-new" class="level2">
<h2 class="anchored" data-anchor-id="whats-new">What’s new?</h2>
<p>The <a href="../../../reference/config/functionality.html#resources">resources directory</a> is no longer added to the <a href="https://en.wikipedia.org/wiki/PATH_(variable)">PATH variable</a> by default. You can re-enable this behaviour by setting <a href="../../../reference/config/functionality.html#add_resources_to_path">add_resources_to_path</a> to <code>true</code> in the functionality part of the <a href="../../../reference/config/index.html">config file</a>.<br>
Here’s a snippet of a config file to illustrate this:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb1-1"><span class="fu" style="color: #4758AB;">functionality</span><span class="kw" style="color: #003B4F;">:</span></span>
<span id="cb1-2"><span class="at" style="color: #657422;">  </span><span class="fu" style="color: #4758AB;">name</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> example_component</span></span>
<span id="cb1-3"><span class="at" style="color: #657422;">  </span><span class="fu" style="color: #4758AB;">description</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> Serve as a simple example.</span></span>
<span id="cb1-4"><span class="at" style="color: #657422;">  </span><span class="fu" style="color: #4758AB;">add_resources_to_path</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> </span><span class="ch" style="color: #20794D;">true</span></span>
<span id="cb1-5"><span class="at" style="color: #657422;">  ...</span></span></code></pre></div>
</section>
<section id="full-changelog" class="level2">
<h2 class="anchored" data-anchor-id="full-changelog">Full changelog:</h2>
<section id="breaking-changes" class="level3">
<h3 class="anchored" data-anchor-id="breaking-changes">BREAKING CHANGES</h3>
<ul>
<li><code>Functionality</code>: The resources dir no longer automatically added to the PATH variable. To alter this behaviour, set <code>.functionality.add_resources_to_path</code> to <code>true</code>.</li>
</ul>
</section>
<section id="new-features" class="level3">
<h3 class="anchored" data-anchor-id="new-features">NEW FEATURES</h3>
<ul>
<li><code>NextFlowPlatform</code>: Added <code>cache</code> directive to specify the typing of caching to be performed.</li>
</ul>
</section>
<section id="minor-changes" class="level3">
<h3 class="anchored" data-anchor-id="minor-changes">MINOR CHANGES</h3>
<ul>
<li><p>Bash Script: only define variables which have values.</p></li>
<li><p>CSharp Test Component: Change Docker image to <code>dataintuitive/dotnet-script</code> to have more control over the lifecycle of versioned tags.</p></li>
<li><p>Updated Code of Conduct from v2.0 to v2.1.</p></li>
</ul>
</section>
<section id="bug-fixes" class="level3">
<h3 class="anchored" data-anchor-id="bug-fixes">BUG FIXES</h3>
<ul>
<li>Viash namespace: Fix incorrect output path when the parent directory of a Viash component is not equal to the value of <code>.functionality.name</code>.</li>
</ul>


</section>
</section>

 ]]></description>
  <category>New Release</category>
  <guid>https://viash.io/blog/posts/viash-0.5.5/index.html</guid>
  <pubDate>Fri, 17 Dec 2021 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Viash 0.5.4</title>
  <dc:creator>Viash Team</dc:creator>
  <link>https://viash.io/blog/posts/viash-0.5.4/index.html</link>
  <description><![CDATA[ 




<section id="whats-new" class="level2">
<h2 class="anchored" data-anchor-id="whats-new">What’s new?</h2>
<p>A cache type can now be specified in the config file for the Nextflow platform. Previously this was hardcoded to be <code>deep</code>, but the default caching method is now <code>default</code>.<br>
To use deep caching again, add this to your config file:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb1-1"><span class="fu" style="color: #4758AB;">cache</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> deep</span></span></code></pre></div>
</section>
<section id="full-changelog" class="level2">
<h2 class="anchored" data-anchor-id="full-changelog">Full changelog:</h2>
<section id="breaking-changes" class="level3">
<h3 class="anchored" data-anchor-id="breaking-changes">BREAKING CHANGES</h3>
<ul>
<li><code>NextFlowPlatform</code>: The default caching mechanism is now what NextFlow uses as default. In order to replicate earlier caching, <code>cache: deep</code> should be specified in the Viash config file.</li>
</ul>
</section>
<section id="new-features" class="level3">
<h3 class="anchored" data-anchor-id="new-features">NEW FEATURES</h3>
<ul>
<li><code>NextFlowPlatform</code>: Added <code>cache</code> directive to specify the typing of caching to be performed.</li>
</ul>


</section>
</section>

 ]]></description>
  <category>New Release</category>
  <guid>https://viash.io/blog/posts/viash-0.5.4/index.html</guid>
  <pubDate>Mon, 20 Sep 2021 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Viash 0.5.3</title>
  <dc:creator>Viash Team</dc:creator>
  <link>https://viash.io/blog/posts/viash-0.5.3/index.html</link>
  <description><![CDATA[ 




<section id="whats-new" class="level2">
<h2 class="anchored" data-anchor-id="whats-new">What’s new?</h2>
<p>This release provides more information to scripts with the new <code>meta</code> list. This list contains two values for now:</p>
<ul>
<li><code>meta["resources_dir"]</code>: Path to the directory containing the resources</li>
<li><code>meta["functionality_name"]</code>: Name of the component</li>
</ul>
<p>A new environment variable is now available for export when working with the NextFlow platform: <code>VIASH_TEMP</code>.</p>
</section>
<section id="resources-directory" class="level2">
<h2 class="anchored" data-anchor-id="resources-directory">Resources directory</h2>
<p>All <a href="../../../reference/config/functionality.html#resources">resources</a> defined in the <a href="../../../reference/config/index.html">config file</a> are copied over to a temporary location right before a Viash component is executed. This location is can now be easily accessed in your scripts, allowing you to modify and copy the files as needed.<br>
Here are some examples in different scripting languages on how to access the meta data, it works similarly to the <code>par</code> list:</p>
<p>Bash:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="bu" style="color: null;">echo</span> <span class="va" style="color: #111111;">$meta_resources_dir</span> </span></code></pre></div>
<p>Python:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="bu" style="color: null;">print</span>(meta[<span class="st" style="color: #20794D;">"resources_dir"</span>])</span></code></pre></div>
<p>R:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;">cat</span>(meta<span class="sc" style="color: #5E5E5E;">$</span>resources_dir)</span></code></pre></div>
</section>
<section id="functionality-name" class="level2">
<h2 class="anchored" data-anchor-id="functionality-name">Functionality name</h2>
<p>The name of the component can now be accessed in the same way as the resources directory. This allows you to print the name of the component out to a console window for example. Here’s how to access this data in different scripting languages:</p>
<p>Bash:</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb4-1"><span class="bu" style="color: null;">echo</span> <span class="va" style="color: #111111;">$meta_functionality_name</span></span></code></pre></div>
<p>Python:</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="bu" style="color: null;">print</span>(meta[<span class="st" style="color: #20794D;">"functionality_name"</span>])</span></code></pre></div>
<p>R:</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="fu" style="color: #4758AB;">cat</span>(meta<span class="sc" style="color: #5E5E5E;">$</span>functionality_name)</span></code></pre></div>
</section>
<section id="full-changelog" class="level2">
<h2 class="anchored" data-anchor-id="full-changelog">Full changelog:</h2>
<section id="new-features" class="level3">
<h3 class="anchored" data-anchor-id="new-features">NEW FEATURES</h3>
<ul>
<li>Similar to <code>par</code>, each script now also has a <code>meta</code> list. <code>meta</code> contains meta information about the component or the execution thereof. It currently has the following fields:
<ul>
<li><code>meta["resources_dir"]</code>: Path to the directory containing the resources</li>
<li><code>meta["functionality_name"]</code>: Name of the component</li>
</ul></li>
<li><code>NextFlowPlatform</code>: Export <code>VIASH_TEMP</code> environment variable.</li>
</ul>
</section>
<section id="bug-fixes" class="level3">
<h3 class="anchored" data-anchor-id="bug-fixes">BUG FIXES</h3>
<ul>
<li><code>NextFlowPlatform</code>: Fix output formatting when <code>separate_multiple_outputs</code> is <code>false</code>.</li>
</ul>


</section>
</section>

 ]]></description>
  <category>New Release</category>
  <guid>https://viash.io/blog/posts/viash-0.5.3/index.html</guid>
  <pubDate>Thu, 02 Sep 2021 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Viash 0.5.2</title>
  <dc:creator>Viash Team</dc:creator>
  <link>https://viash.io/blog/posts/viash-0.5.2/index.html</link>
  <description><![CDATA[ 




<section id="whats-new" class="level2">
<h2 class="anchored" data-anchor-id="whats-new">What’s new?</h2>
<p>This is a small release containing two small features and a bug fix. The new <code>run_args</code> field allows you to add <a href="https://docs.docker.com/engine/reference/commandline/run/">docker run</a> arguments to the <a href="../../../reference/config/platforms/DockerPlatform.html">Docker platform</a> section of a <a href="../../../reference/config/index.html">config file</a>. For example:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb1-1"><span class="fu" style="color: #4758AB;">platforms</span><span class="kw" style="color: #003B4F;">:</span></span>
<span id="cb1-2"><span class="at" style="color: #657422;">  </span><span class="kw" style="color: #003B4F;">-</span><span class="at" style="color: #657422;"> </span><span class="fu" style="color: #4758AB;">type</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> docker</span></span>
<span id="cb1-3"><span class="at" style="color: #657422;">  </span><span class="fu" style="color: #4758AB;">image</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> bash:4.0</span></span>
<span id="cb1-4"><span class="at" style="color: #657422;">  </span><span class="fu" style="color: #4758AB;">run_args</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> </span><span class="st" style="color: #20794D;">"--expose 127.0.0.1:80:8080/tcp --env MY_ENV_VAR=foo"</span></span></code></pre></div>
<p>There’s also a new field for the <a href="../../../reference/config/platforms/NextflowVdsl3Platform.html">Nextflow platform</a>: <code>separate_multiple_outputs</code>. By default, this is set to <code>true</code> and separates the outputs generated by a Nextflow component with multiple outputs as separate events on the channel. You can now choose to disable this behaviour:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb2-1"><span class="fu" style="color: #4758AB;">platforms</span><span class="kw" style="color: #003B4F;">:</span></span>
<span id="cb2-2"><span class="at" style="color: #657422;">  </span><span class="kw" style="color: #003B4F;">-</span><span class="at" style="color: #657422;"> </span><span class="fu" style="color: #4758AB;">type</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> nextflow</span></span>
<span id="cb2-3"><span class="at" style="color: #657422;">    </span><span class="fu" style="color: #4758AB;">publish</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> </span><span class="ch" style="color: #20794D;">true</span></span>
<span id="cb2-4"><span class="at" style="color: #657422;">    </span><span class="fu" style="color: #4758AB;">separate_multiple_outputs</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> </span><span class="ch" style="color: #20794D;">false</span></span></code></pre></div>
</section>
<section id="full-changelog" class="level2">
<h2 class="anchored" data-anchor-id="full-changelog">Full changelog:</h2>
<section id="minor-changes" class="level3">
<h3 class="anchored" data-anchor-id="minor-changes">MINOR CHANGES</h3>
<ul>
<li><p><code>DockerPlatform</code>: Added <code>run_args</code> field to allow setting <code>docker run</code> arguments.</p></li>
<li><p><code>NextFlowPlatform</code>: Added argument <code>separate_multiple_outputs</code> to allow not separating the outputs generated by a component with multiple outputs as separate events on the channel.</p></li>
</ul>
</section>
<section id="bug-fixes" class="level3">
<h3 class="anchored" data-anchor-id="bug-fixes">BUG FIXES</h3>
<ul>
<li><code>IO</code>: Allow overwriting directory resources upon rebuild.</li>
</ul>


</section>
</section>

 ]]></description>
  <category>New Release</category>
  <guid>https://viash.io/blog/posts/viash-0.5.2/index.html</guid>
  <pubDate>Fri, 13 Aug 2021 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Viash 0.5.1</title>
  <dc:creator>Viash Team</dc:creator>
  <link>https://viash.io/blog/posts/viash-0.5.1/index.html</link>
  <description><![CDATA[ 




<section id="c-script-support" class="level2">
<h2 class="anchored" data-anchor-id="c-script-support">C# script support</h2>
<p>We’ve added C# scripts (.csx) as a <a href="../../../guide/component/languages.html">supported language</a> using <strong>dotnet-script</strong>.<br>
To run C# scripts natively, you’ll need to install <a href="https://dotnet.microsoft.com/download">.NET Core</a> and execute the following command in a terminal:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="ex" style="color: null;">dotnet</span> tool install <span class="at" style="color: #657422;">-g</span> dotnet-script</span></code></pre></div>
<p>You can now run C# scripts like this:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="ex" style="color: null;">dotnet</span> script hello_viash.csx</span></code></pre></div>
<p>To use C# scripts as components, use the new <code>csharp_script</code> type in the functionality section of your <a href="../../../reference/config/index.html">config file</a>:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb3-1"><span class="at" style="color: #657422;">  </span><span class="fu" style="color: #4758AB;">resources</span><span class="kw" style="color: #003B4F;">:</span></span>
<span id="cb3-2"><span class="at" style="color: #657422;">  </span><span class="kw" style="color: #003B4F;">-</span><span class="at" style="color: #657422;"> </span><span class="fu" style="color: #4758AB;">type</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> csharp_script</span></span>
<span id="cb3-3"><span class="at" style="color: #657422;">    </span><span class="fu" style="color: #4758AB;">path</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> script.csx</span></span></code></pre></div>
<p>Here’s an example of a simple C# script with Viash in mind:</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode csharp code-with-copy"><code class="sourceCode cs"><span id="cb4-1"><span class="co" style="color: #5E5E5E;">// VIASH START</span></span>
<span id="cb4-2"><span class="dt" style="color: #AD0000;">var</span> par <span class="op" style="color: #5E5E5E;">=</span> <span class="kw" style="color: #003B4F;">new</span> <span class="op" style="color: #5E5E5E;">{</span></span>
<span id="cb4-3">  input <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">"Hello World"</span><span class="op" style="color: #5E5E5E;">,</span></span>
<span id="cb4-4">  name <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">"Mike"</span></span>
<span id="cb4-5"><span class="op" style="color: #5E5E5E;">};</span></span>
<span id="cb4-6"><span class="co" style="color: #5E5E5E;">// VIASH </span><span class="re">END</span></span>
<span id="cb4-7"></span>
<span id="cb4-8">System<span class="op" style="color: #5E5E5E;">.</span><span class="fu" style="color: #4758AB;">Console</span><span class="op" style="color: #5E5E5E;">.</span><span class="fu" style="color: #4758AB;">WriteLine</span><span class="op" style="color: #5E5E5E;">(</span>input <span class="op" style="color: #5E5E5E;">+</span> <span class="st" style="color: #20794D;">", "</span> <span class="op" style="color: #5E5E5E;">+</span> name <span class="op" style="color: #5E5E5E;">+</span> <span class="st" style="color: #20794D;">"!"</span><span class="op" style="color: #5E5E5E;">);</span></span></code></pre></div>
<p>The language-specific guide for creating C# script components will be added in the near future.</p>
</section>
<section id="bug-fixes" class="level2">
<h2 class="anchored" data-anchor-id="bug-fixes">Bug fixes</h2>
<p>First off, these special characters can now be used in the description, usage, default and example fields of components:</p>
<ul>
<li>”</li>
<li>`</li>
<li>\</li>
<li></li>
<li>$</li>
</ul>
<p>Nextflow output files with the same extension won’t overwrite each other any more, like it was the case for arguments like this:</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb5-1"><span class="fu" style="color: #4758AB;">functionality</span><span class="kw" style="color: #003B4F;">:</span></span>
<span id="cb5-2"><span class="at" style="color: #657422;">  </span><span class="fu" style="color: #4758AB;">name</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> bar</span></span>
<span id="cb5-3"><span class="at" style="color: #657422;">  </span><span class="fu" style="color: #4758AB;">arguments</span><span class="kw" style="color: #003B4F;">:</span></span>
<span id="cb5-4"><span class="at" style="color: #657422;">    </span><span class="kw" style="color: #003B4F;">-</span><span class="at" style="color: #657422;"> </span><span class="fu" style="color: #4758AB;">name</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> </span><span class="st" style="color: #20794D;">"--input"</span></span>
<span id="cb5-5"><span class="at" style="color: #657422;">      </span><span class="fu" style="color: #4758AB;">type</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> file</span></span>
<span id="cb5-6"><span class="at" style="color: #657422;">      </span><span class="fu" style="color: #4758AB;">example</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> input.txt</span></span>
<span id="cb5-7"><span class="at" style="color: #657422;">    </span><span class="kw" style="color: #003B4F;">-</span><span class="at" style="color: #657422;"> </span><span class="fu" style="color: #4758AB;">name</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> </span><span class="st" style="color: #20794D;">"--output1"</span></span>
<span id="cb5-8"><span class="at" style="color: #657422;">      </span><span class="fu" style="color: #4758AB;">type</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> file</span></span>
<span id="cb5-9"><span class="at" style="color: #657422;">      </span><span class="fu" style="color: #4758AB;">direction</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> output</span></span>
<span id="cb5-10"><span class="at" style="color: #657422;">      </span><span class="fu" style="color: #4758AB;">required</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> </span><span class="ch" style="color: #20794D;">true</span></span>
<span id="cb5-11"><span class="at" style="color: #657422;">      </span><span class="fu" style="color: #4758AB;">example</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> output.txt</span></span>
<span id="cb5-12"><span class="at" style="color: #657422;">    </span><span class="kw" style="color: #003B4F;">-</span><span class="at" style="color: #657422;"> </span><span class="fu" style="color: #4758AB;">name</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> </span><span class="st" style="color: #20794D;">"--output2"</span></span>
<span id="cb5-13"><span class="at" style="color: #657422;">      </span><span class="fu" style="color: #4758AB;">type</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> file</span></span>
<span id="cb5-14"><span class="at" style="color: #657422;">      </span><span class="fu" style="color: #4758AB;">direction</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> output</span></span>
<span id="cb5-15"><span class="at" style="color: #657422;">      </span><span class="fu" style="color: #4758AB;">required</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> </span><span class="ch" style="color: #20794D;">true</span></span>
<span id="cb5-16"><span class="at" style="color: #657422;">      </span><span class="fu" style="color: #4758AB;">example</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> optional.txt</span></span></code></pre></div>
<p>In this case, the two output files would have been identical in the past. ___</p>
</section>
<section id="full-changelog" class="level2">
<h2 class="anchored" data-anchor-id="full-changelog">Full changelog:</h2>
<section id="new-features" class="level3">
<h3 class="anchored" data-anchor-id="new-features">NEW FEATURES</h3>
<ul>
<li><code>CSharpScript</code>: Added support for C# scripts (<code>type: "csharp_script"</code>) to viash.</li>
</ul>
</section>
<section id="bug-fixes-1" class="level3">
<h3 class="anchored" data-anchor-id="bug-fixes-1">BUG FIXES</h3>
<ul>
<li><p><code>BashWrapper</code>: Refactor escaping descriptions, usages, defaults, and examples (#34).</p></li>
<li><p><code>NextFlowPlatform</code>: Refactor escaping descriptions, usages, defaults and examples (#75).</p></li>
<li><p><code>NextFlowPlatform</code>: Add argument to output path to avoid naming conflicts for components with multiple output files (#76).</p></li>
<li><p><code>NextFlowPlatform</code>, <code>renderCLI()</code>: Only add flag to rendered command when boolean_true is actually true (#78).</p></li>
<li><p><code>DockerPlatform</code>: Only chown when output file exists.</p></li>
</ul>
</section>
<section id="testing" class="level3">
<h3 class="anchored" data-anchor-id="testing">TESTING</h3>
<ul>
<li><p><code>viash build</code>: Capture stdout messages when errors are expected, so that they don’t clutter the expected output.</p></li>
<li><p><code>viash build</code>: Check <code>--help</code> description output on the whole text instead of per letter or word basis.</p></li>
<li><p><code>TestingAllComponentsSuite</code>: Only testing bash natively, because other dependencies might not be available.</p></li>
</ul>


</section>
</section>

 ]]></description>
  <category>New Release</category>
  <guid>https://viash.io/blog/posts/viash-0.5.1/index.html</guid>
  <pubDate>Mon, 19 Jul 2021 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Viash 0.5.0</title>
  <dc:creator>Viash Team</dc:creator>
  <link>https://viash.io/blog/posts/viash-0.5.0/index.html</link>
  <description><![CDATA[ 




<p>Viash 0.5.0 has some improvements to the way components with a Docker backend can be ran and the Nextflow platform has some argument changes.</p>
<section id="improvements-to-docker-backend" class="level2">
<h2 class="anchored" data-anchor-id="improvements-to-docker-backend">Improvements to Docker backend</h2>
<p>In the past, you needed to perform <code>--setup</code> on your <a href="../../../reference/config/platforms/DockerPlatform.html">Docker-based components</a> and executables in order for the image to be built before you could run the component or executable. Now you can simply run your component or executable and Viash will do the image building automatically by default if it detects an image isn’t present yet. This behaviour can be changed by using a <a href="../../../guide/building-block/docker/setup-strategies.html">Docker setup strategy</a>. For example:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="ex" style="color: null;">viash</span> build config.vsh.yaml <span class="at" style="color: #657422;">-p</span> docker <span class="at" style="color: #657422;">--setup</span> alwayscachedbuild</span></code></pre></div>
</section>
<section id="nextflow-gets-some-argument-changes" class="level2">
<h2 class="anchored" data-anchor-id="nextflow-gets-some-argument-changes">Nextflow gets some argument changes</h2>
<p>Arguments for the <a href="../../../reference/config/platforms/NextflowVdsl3Platform.html">Nextflow platform</a> now have optional <code>required</code> and <code>default</code> values, just like their native and Docker counterparts. For example:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb2-1"><span class="at" style="color: #657422;">  </span><span class="fu" style="color: #4758AB;">arguments</span><span class="kw" style="color: #003B4F;">:</span></span>
<span id="cb2-2"><span class="at" style="color: #657422;">    </span><span class="kw" style="color: #003B4F;">-</span><span class="at" style="color: #657422;"> </span><span class="fu" style="color: #4758AB;">name</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> --name</span></span>
<span id="cb2-3"><span class="at" style="color: #657422;">      </span><span class="fu" style="color: #4758AB;">type</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> string</span></span>
<span id="cb2-4"><span class="at" style="color: #657422;">      </span><span class="fu" style="color: #4758AB;">description</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> Input name</span></span>
<span id="cb2-5"><span class="at" style="color: #657422;">      </span><span class="fu" style="color: #4758AB;">required</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> </span><span class="ch" style="color: #20794D;">true</span></span>
<span id="cb2-6"><span class="at" style="color: #657422;">    </span><span class="kw" style="color: #003B4F;">-</span><span class="at" style="color: #657422;"> </span><span class="fu" style="color: #4758AB;">name</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> --repeat</span></span>
<span id="cb2-7"><span class="at" style="color: #657422;">      </span><span class="fu" style="color: #4758AB;">type</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> integer</span></span>
<span id="cb2-8"><span class="at" style="color: #657422;">      </span><span class="fu" style="color: #4758AB;">description</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> Times to repeat the name</span></span>
<span id="cb2-9"><span class="at" style="color: #657422;">      </span><span class="fu" style="color: #4758AB;">default</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> </span><span class="dv" style="color: #AD0000;">100</span></span></code></pre></div>
<p>Take a look at the <a href="../../../reference/config/functionality.html">Functionality page</a> for more information on arguments and their properties.<br>
As long as you use long-option arguments (e.g.&nbsp;<code>--my-option</code>) in the <a href="../../../reference/config/index.html">config file</a> for required arguments, the way of specifying argument values for the Nextflow platform is identical to the Docker platform. You still access non-required arguments via this syntax: <code>--&lt;component_name&gt;__&lt;argument_name&gt; &lt;value&gt;</code>. For example:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="ex" style="color: null;">my_component</span> <span class="at" style="color: #657422;">--</span> <span class="at" style="color: #657422;">--my_component__input</span> Hello!</span></code></pre></div>
</section>
<section id="verbosity-levels-for-viash-run" class="level2">
<h2 class="anchored" data-anchor-id="verbosity-levels-for-viash-run">Verbosity levels for viash run</h2>
<p>Executables now have 8 levels of verbosity:</p>
<ol start="0" type="1">
<li>emergency</li>
<li>alert</li>
<li>critical</li>
<li>error</li>
<li>warning</li>
<li>notice</li>
<li>info</li>
<li>debug</li>
</ol>
<p>The default verbosity level is <strong>notice</strong>. You can pass the <code>-v</code> or <code>--verbose</code> option to bump up the verbosity by one level. By passing <code>-vv</code> the verbosity goes up by two levels. You can manually set the verbosity by using the <code>--verbosity &lt;int_level&gt;</code> option. For example, if you wanted to only show errors or worse:</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb4-1"><span class="ex" style="color: null;">viash</span> run config.vsh.yaml <span class="at" style="color: #657422;">--</span> <span class="at" style="color: #657422;">--verbosity</span> 3</span></code></pre></div>
</section>
<section id="full-changelog" class="level2">
<h2 class="anchored" data-anchor-id="full-changelog">Full changelog:</h2>
<section id="breaking-changes" class="level3">
<h3 class="anchored" data-anchor-id="breaking-changes">BREAKING CHANGES</h3>
<ul>
<li><p><code>DockerPlatform</code>: A Docker setup will be performed by default. Default strategy has been changed to <code>ifneedbepullelsecachedbuild</code> (#57). <code>---setup</code> strategy has been removed and <code>---docker_setup_strategy</code> has been renamed to <code>---setup</code>. This change allows running a component for the first time. During first time setup, the Docker container will be pulled or built automatically.</p></li>
<li><p><code>NativePlatform</code>: Deprecated the native setup field.</p></li>
</ul>
</section>
<section id="major-changes" class="level3">
<h3 class="anchored" data-anchor-id="major-changes">MAJOR CHANGES</h3>
<ul>
<li><p><code>NXF</code>: This version changes the handling logic for arguments. An argument can be either <code>required</code> or not and can have a <code>default: ...</code> value or not. Checks are implemented to verify that required arguments are effectively provided <em>during</em> pipeline running.</p></li>
<li><p><code>NXF</code>: If one sticks to long-option argments in the viash config, for all arguments that are <em>required</em>, the way of specifying the arguments on the CLI is identical for the Docker and NextFlow platforms. Non-required arguments can still be accessed from CLI using <code>--&lt;component_name&gt;__&lt;argument_name&gt; ...</code>.</p></li>
<li><p><code>NXF</code>: Running a module as a standalone pipeline has become easier.</p></li>
<li><p><code>viash run</code>: Implement verbosity levels (#58). viash executables now have 7 levels of verbosity: emergency, alert, critical, error, warning, notice, info, debug. The default verbosity level is ‘notice’. Passing <code>-v</code> or <code>--verbose</code> bumps up the verbosity level by one, <code>-vv</code> by two. The verbosity level can be set manually by passing <code>--verbosity x</code>.</p></li>
</ul>
</section>
<section id="minor-changes" class="level3">
<h3 class="anchored" data-anchor-id="minor-changes">MINOR CHANGES</h3>
<ul>
<li><p><code>Docker Platform</code>: Added <code>privileged</code> argument, allowing to run docker with the <code>--privileged</code> flag.</p></li>
<li><p><code>Docker Requirements</code>: Allow specifying environment variables in the Dockerfile.</p></li>
<li><p>Config modding: Added a <code>+0=</code> operator to prepend items to a list.</p></li>
<li><p><code>viash run</code>: Added a <code>--version</code> flag to viash executables for viewing the version of the component.</p></li>
<li><p><code>Functionality</code>: Added checks on the functionality and argument names.</p></li>
<li><p><code>viash run</code>: Added examples to functionality and arguments. Reworked <code>--help</code> formatting to include more information and be more consistent (#56).</p></li>
</ul>
</section>
<section id="bug-fixes" class="level3">
<h3 class="anchored" data-anchor-id="bug-fixes">BUG FIXES</h3>
<ul>
<li><p><code>Docker R Requirements</code>: Install <code>remotes</code> when using <code>{ type: r, packages: [ foo ] }</code>.</p></li>
<li><p><code>config</code>: Throw error when user made a typo in the viash config (#62).</p></li>
</ul>
</section>
<section id="testing" class="level3">
<h3 class="anchored" data-anchor-id="testing">TESTING</h3>
<ul>
<li><p><code>NXF</code>: Add an end-to-end test for running a nextflow pipeline using viash components.</p></li>
<li><p><code>Docker</code>: Reorganized viash docker build testbench into a main testbench with smaller auxiliary testbenches to keep them more manageable and clear what happens where.</p></li>
<li><p><code>viash ns</code>: Added a basic testbench for namespace tests.</p></li>
</ul>


</section>
</section>

 ]]></description>
  <category>New Release</category>
  <guid>https://viash.io/blog/posts/viash-0.5.0/index.html</guid>
  <pubDate>Mon, 12 Jul 2021 00:00:00 GMT</pubDate>
</item>
</channel>
</rss>

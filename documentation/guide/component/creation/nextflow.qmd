---
title: Nextflow
search: true
---

``` include
_tool-chooser.md
```

## Overview

This guide explains how to create a Viash component from scratch that targets the Nextflow platform. For a general overview of Viash components, take a look at the [Viash Basics](#) guide.

## Creating a Viash component

### Adding a Viash config

create folder named nextflow_component, add src/remove_comments dir
create config.vsh.yaml and add to src/remove_comments  
add this

```yaml
functionality:
  name: remove_comments
  arguments:
    - name: "--input"
      alternatives: [ "-i" ]
      type: file
      required: true
      example: "file.tsv"
    - name: "--output"
      alternatives: [ "-o" ]
      type: file
      required: true
      direction: output
      example: "file.tsv"
  resources:
  - type: bash_script
    path: ./script.sh
platforms:
  - type: nextflow
    variant: vdsl3
    directives:
      container: ubuntu:20.04
```
  
short description of what this does  
focus on platforms section, explain vdsl3 and directives  
single resource needed, a script

### Writing the script

add simple script

```bash
#!/bin/bash

grep -v '^#' "$par_input" > "$par_output"
```

you now have this structure which makes up a component

```
nextflow_component
└── src
    └── remove_comments
        ├── config.vsh.yaml
        └── script.sh
```

## Running the Viash component

In contrast to native and Docker based components, a Nextflow based component cannot be ran by using the [`viash run`](#) command. These types of components require you to use [`viash build`](#) first to generate a Nextflow module and run that module using `nextflow run`. See [Building and Running Nextflow](/documentation/guide/building-block/nextflow/building-running.html) for more information.

<!-- run = a Nextflow module is created that is ran  
execute command

```bash
viash run src/remove_comments/config.vsh.yaml
```  
  
show output

```
...
``` -->

<!-- ## What's next?

link to [building and running nextflow](/documentation/guide/building-block/nextflow/building-running.html)  
that guide will explain how to create a nextflow module that can be used in piplines -->

---
title: Namespaces
search: true
execute:
  echo: false
  output: asis
---

## Overview 

A namespace is a group of Viash components.

Here are some benefits of grouping your components:

- Grouping components in namespaces allows for categorizing components.
- Each teams of developers can work on a different set of components in parallel, which improves the separation of concerns.
- Generating build targets and unit testing can be done in bulk, with optional filtering by namespace using the [`viash ns` commands](/documentation/reference/viash/ns.html).

This guide will cover how to define a namespace and use it with Viash.

## Adding components to a namespace

There are two ways of defining a namespace: either by adding the `namespace` property to the Viash config file or by creating a directory structure. You can use one or both of these methods in your projects.

### Namespace property

You can assign a component to a namespace by defining its namespace
attribute in the [viash config file](/api/config/config):

``` yaml
functionality:
  name: some_component
  namespace: my_namespace
```

### Directory structure

Alternatively, the namespace can be automatically inferred by
structuring the components hierarchically. In the example below, there
are two namespaces: **file\_processing** and **network\_tools**. Each of
these namespaces has one or more components assigned to them:

``` bash
src
├── file_processing
│   ├── parse_images
│   │   ├── config.vsh.yaml
│   │   └── script.sh
│   └── render_mp4
│       ├── config.vsh.yaml
│       └── script.sh
└── network_tools
    └── download_files
        ├── config.vsh.yaml
        ├── output
        │   └── download_files
        └── script.sh
```

## Using the viash ns commands

### Listing namespaces in a project

ns list


### Unit testing a namespace

ns test

### Building a namespace

ns build
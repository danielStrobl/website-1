---
title: Building and Running
search: true
---

## Overview

This guide covers how you can can build a Nextflow module to use in your pipeline.

## Building a Nextflow VDSL3 module

To start with, create a Viash component that targets the Nextflow platform as explained in [this guide](/documentation/guide/component/creation/nextflow.html).  
Next, use the [viash build]() command to generate a Nextflow module inside of a **target/remove_comments** directory:

```bash
viash build src/remove_comments/config.vsh.yaml -o target/remove_comments
```   

This will generate two files in the **target/remove_comments** directory: **main.nf** and **nextflow.config**.

```
nextflow_component
├── src
│   └── remove_comments
│       ├── config.vsh.yaml
│       └── script.sh
└── target
    └── remove_comments
        ├── main.nf
        └── nextflow.config


```

## Runing a standalone pipeline

A VDSL3 module can be run as a small, standalone Nextflow pipeline.  

### Documentation

It's often useful to know what arguments a module expects before trying to run it. To display the documentation for a module, run the module with just the `--help` argument:

```bash
nextflow run target/remove_comments/main.nf --help
```

This will result in output that looks similar to this:

```
N E X T F L O W  ~  version 22.04.3
Launching `target/remove_comments/main.nf` [admiring_carlsson] DSL2 - revision: 8de4c7c8eb
remove_comments

Options:
    --input
        type: file, required parameter
        example: file.tsv

    --output
        type: file, required parameter, output
        example: file.tsv
```

As you can see, this module needs a **tsv file** as its `input` and it will write the updated file away to a given `output` path.

### Running the module

To test out the module by itself, you need a tsv file to remove the comments from.
You can download a sample file we provided here: 

<!-- [Download sample.tsv](/download/remove_comments/sample.tsv "download"){#btn-download .btn-action .btn .btn-info .btn-lg role="button"} -->
<a href="/download/remove_comments/sample.tsv" id="btn-download" class="btn btn-info btn-md" role="button" download>Download sample.tsv</a>

Here are its contents:

```
# this is a header		
# this is also a header		
one     0.11	123
two	    0.23	456
three	0.35	789
four	0.47	123
```

Place **sample.tsv** file in a new directory named **data**, alongside the **src** and **target** directories.

```
nextflow_component
├── data
│   └── sample.tsv
├── src
│   └── remove_comments
│       ├── config.vsh.yaml
│       └── script.sh
└── target
    └── remove_comments
        ├── main.nf
        └── nextflow.config
```

Now run the module along with the required arguments:

```bash
nextflow run target/remove_comments/main.nf \
   --input "data/sample.tsv" \
   --publishDir output
```

Below is the result:

```
N E X T F L O W  ~  version 22.04.3
Launching `target/remove_comments/main.nf` [desperate_fermat] DSL2 - revision: 8de4c7c8eb
WARN: Key for module 'remove_comments' is duplicated.

executor >  local (1)
[2b/17d7a5] process > remove_comments:remove_comments_process1 [100%] 1 of 1 ✔
input: [run, [input:/home/user/nextflow_component/data/sample.tsv]]
output: [run, /home/user/nextflow_component/work/2b/17d7a50e74d27bc8fd39f098ba06fc/run.remove_comments.output.tsv]
```

A new tsv file should've been generated now in the **output** folder named **run.remove_comments.output.tsv**.

## What's next?

To use generated modules inside an actual Nextflow pipeline, take a look at our [Pipeline Basics](/documentation/guide/data-workflow/nextflow-pipeline/pipeline-basics.html) guide.
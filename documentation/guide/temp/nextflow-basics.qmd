---
title: Nextflow Basics
search: true
---

## Introduction

Nextflow is a popular DSL-based workflow manager with exemplary
portability, reproducibility and scalability:

-   ***Portability*** means that one can write the pipeline once, using
    the Nextflow DSL and run it on different platforms, i.e. what
    Nextflow calls
    [executors](https://www.nextflow.io/documentation/latest/executor.html)
    ranging from a simple laptop to cluster systems running hundreds or
    thousands of nodes.

-   Depending on the executor, computations can be ***scaled out*** to
    multiple nodes automatically

-   Nextflow automatically keeps a log of parameters and intermediate
    results providing a foundation for ***reproducible*** workflows.


## Nextflow dialects

Over the past year, the flexibility of the Nextflow DSL has evolved
significantly.

-   **DSL1**: The original Nextflow syntax, using a more ‘imperative’
    programming approach.
-   **DSL2**: A set of built-in helper classes which allow pipelines to
    be built in more ‘functional’ way.
-   The `nf-core` project uses a combination of DSL2 and custom
    Groovy helper classes to reduce some of the boilerplate code.
-   **VDSL3**: An extension of DSL2 which uses to Viash to make Nextflow
    functional and more 'batteries included', see also VDSL3.



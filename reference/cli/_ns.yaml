data:
- bannerCommand: viash ns build
  bannerDescription: Build a namespace from many viash config files.
  bannerUsage: viash ns build [-n nmspc] [-s src] [-t target] [-p docker] [--setup]
    [--push] [--parallel] [--flatten]
  name: build
  opts:
  - argName: arg
    descr: 'Filter which components get selected by component and [namespace](/guide/component/namespaces.html)
      name. Can be a regex. Example: "^mynamespace/component1$".'
    hidden: false
    name: query
    optType: opt
    required: false
    short: q
    type: String
  - argName: arg
    descr: 'Filter which namespaces get selected by [namespace](/guide/component/namespaces.html)
      name. Can be a regex. Example: "^mynamespace$".'
    hidden: false
    name: query_namespace
    optType: opt
    required: false
    short: n
    type: String
  - argName: arg
    descr: 'Filter which components get selected by component name. Can be a regex.
      Example: "^component1".'
    hidden: false
    name: query_name
    optType: opt
    required: false
    type: String
  - argName: arg
    descr: 'A source directory containing viash config files, possibly structured
      in a hierarchical folder structure. Default: src/.'
    hidden: false
    name: src
    optType: opt
    required: false
    short: s
    type: String
  - argName: arg
    descr: Acts as a regular expression to filter the platform ids specified in the
      found config files. If this is not provided, all platforms will be used. If
      no platforms are defined in a config, the native platform will be used. In addition,
      the path to a platform yaml file can also be specified.
    hidden: false
    name: platform
    optType: opt
    required: false
    short: p
    type: String
  - argName: arg
    default: 'false'
    descr: Whether or not to run the process in parallel.
    hidden: false
    name: parallel
    optType: opt
    required: false
    short: l
    type: Boolean
  - argName: arg
    default: List()
    descr: Modify a viash config at runtime using [dynamic config modding](/reference/config_mods/#).
    hidden: false
    name: config_mod
    optType: opt
    required: false
    short: c
    type: List[String]
  - argName: arg
    descr: 'A target directory to build the executables into. Default: target/.'
    hidden: false
    name: target
    optType: opt
    required: false
    short: t
    type: String
  - argName: arg
    descr: Which [setup strategy](/guide/building-block/docker/setup-strategies.html)
      for creating the container to use [Docker Platform only].
    hidden: false
    name: setup
    optType: opt
    required: false
    type: String
  - argName: arg
    default: 'false'
    descr: Whether or not to push the container to a Docker registry [Docker Platform
      only].
    hidden: false
    name: push
    optType: opt
    required: false
    type: Boolean
  - argName: arg
    default: 'false'
    descr: Flatten the target builds, handy for building one platform to a bin directory.
    hidden: false
    name: flatten
    optType: opt
    required: false
    short: f
    type: Boolean
  subcommands: []
- bannerCommand: viash ns test
  bannerDescription: Test a namespace containing many viash config files.
  bannerUsage: viash ns test [-n nmspc] [-s src] [-p docker] [--parallel] [--tsv file.tsv]
    [--append]
  name: test
  opts:
  - argName: arg
    descr: 'Filter which components get selected by component and [namespace](/guide/component/namespaces.html)
      name. Can be a regex. Example: "^mynamespace/component1$".'
    hidden: false
    name: query
    optType: opt
    required: false
    short: q
    type: String
  - argName: arg
    descr: 'Filter which namespaces get selected by [namespace](/guide/component/namespaces.html)
      name. Can be a regex. Example: "^mynamespace$".'
    hidden: false
    name: query_namespace
    optType: opt
    required: false
    short: n
    type: String
  - argName: arg
    descr: 'Filter which components get selected by component name. Can be a regex.
      Example: "^component1".'
    hidden: false
    name: query_name
    optType: opt
    required: false
    type: String
  - argName: arg
    descr: 'A source directory containing viash config files, possibly structured
      in a hierarchical folder structure. Default: src/.'
    hidden: false
    name: src
    optType: opt
    required: false
    short: s
    type: String
  - argName: arg
    descr: Acts as a regular expression to filter the platform ids specified in the
      found config files. If this is not provided, all platforms will be used. If
      no platforms are defined in a config, the native platform will be used. In addition,
      the path to a platform yaml file can also be specified.
    hidden: false
    name: platform
    optType: opt
    required: false
    short: p
    type: String
  - argName: arg
    default: 'false'
    descr: Whether or not to run the process in parallel.
    hidden: false
    name: parallel
    optType: opt
    required: false
    short: l
    type: Boolean
  - argName: arg
    default: List()
    descr: Modify a viash config at runtime using [dynamic config modding](/reference/config_mods/#).
    hidden: false
    name: config_mod
    optType: opt
    required: false
    short: c
    type: List[String]
  - argName: arg
    descr: Whether or not to keep temporary files. By default, files will be deleted
      if all goes well but remain when an error occurs. By specifying --keep true,
      the temporary files will always be retained, whereas --keep false will always
      delete them. The temporary directory can be overwritten by setting defining
      a VIASH_TEMP directory.
    hidden: false
    name: keep
    optType: opt
    required: false
    short: k
    type: String
  - argName: arg
    descr: The maximum number of (logical) cpus a component is allowed to use.
    hidden: false
    name: cpus
    optType: opt
    required: false
    type: Int
  - argName: arg
    descr: The maximum amount of memory a component is allowed to allocate. Unit must
      be one of B, KB, MB, GB, TB or PB.
    hidden: false
    name: memory
    optType: opt
    required: false
    type: String
  - argName: arg
    descr: Path to write a summary of the test results to.
    hidden: false
    name: tsv
    optType: opt
    required: false
    short: t
    type: String
  - argName: arg
    default: 'false'
    descr: Append to tsv instead of overwrite
    hidden: false
    name: append
    optType: opt
    required: false
    short: a
    type: Boolean
  subcommands: []
- bannerCommand: viash ns list
  bannerDescription: List a namespace containing many viash config files.
  bannerUsage: viash ns list [-n nmspc] [-s src] [-p docker]
  name: list
  opts:
  - argName: arg
    descr: 'Filter which components get selected by component and [namespace](/guide/component/namespaces.html)
      name. Can be a regex. Example: "^mynamespace/component1$".'
    hidden: false
    name: query
    optType: opt
    required: false
    short: q
    type: String
  - argName: arg
    descr: 'Filter which namespaces get selected by [namespace](/guide/component/namespaces.html)
      name. Can be a regex. Example: "^mynamespace$".'
    hidden: false
    name: query_namespace
    optType: opt
    required: false
    short: n
    type: String
  - argName: arg
    descr: 'Filter which components get selected by component name. Can be a regex.
      Example: "^component1".'
    hidden: false
    name: query_name
    optType: opt
    required: false
    type: String
  - argName: arg
    descr: 'A source directory containing viash config files, possibly structured
      in a hierarchical folder structure. Default: src/.'
    hidden: false
    name: src
    optType: opt
    required: false
    short: s
    type: String
  - argName: arg
    descr: Acts as a regular expression to filter the platform ids specified in the
      found config files. If this is not provided, all platforms will be used. If
      no platforms are defined in a config, the native platform will be used. In addition,
      the path to a platform yaml file can also be specified.
    hidden: false
    name: platform
    optType: opt
    required: false
    short: p
    type: String
  - argName: arg
    default: 'false'
    descr: Whether or not to run the process in parallel.
    hidden: false
    name: parallel
    optType: opt
    required: false
    short: l
    type: Boolean
  - argName: arg
    default: List()
    descr: Modify a viash config at runtime using [dynamic config modding](/reference/config_mods/#).
    hidden: false
    name: config_mod
    optType: opt
    required: false
    short: c
    type: List[String]
  - argName: arg
    choices:
    - yaml
    - json
    default: yaml
    descr: Which output format to use.
    hidden: false
    name: format
    optType: choice
    required: false
    short: f
    type: String
  - argName: arg
    default: 'false'
    descr: Whether or not to postprocess each component's [argument groups](/reference/config/functionality/#argument_groups).
    hidden: false
    name: parse_argument_groups
    optType: opt
    required: false
    type: Boolean
  subcommands: []
- bannerCommand: viash ns exec
  bannerDescription: "Execute a command for all found Viash components.\nThe syntax\
    \ of this command is inspired by `find . -exec echo {} \\;`.\n\nThe following\
    \ fields are automatically replaced:  \n\n * `{}` | `{path}`: path to the config\
    \ file\n * `{abs-path}`: absolute path to the config file\n * `{dir}`: path to\
    \ the parent directory of the config file\n * `{abs-dir}`: absolute path to the\
    \ directory of the config file\n * `{main-script}`: path to the main script (if\
    \ any)\n * `{abs-main-script}`: absolute path to the main script (if any)\n *\
    \ `{functionality-name}`: name of the component\n * `{namespace}`: namespace of\
    \ the component\n * `{platform}`: selected platform id (only when --apply_platform\
    \ is used)\n\nA command suffixed by `\\;` (or nothing) will execute one command\
    \ for each\nof the Viash components, whereas a command suffixed by `+` will execute\
    \ one\ncommand for all Viash components."
  bannerUsage: 'viash ns exec ''echo {path} \\;''

    viash ns exec ''chmod +x {main-script} +'''
  name: exec
  opts:
  - argName: arg
    descr: 'Filter which components get selected by component and [namespace](/guide/component/namespaces.html)
      name. Can be a regex. Example: "^mynamespace/component1$".'
    hidden: false
    name: query
    optType: opt
    required: false
    short: q
    type: String
  - argName: arg
    descr: 'Filter which namespaces get selected by [namespace](/guide/component/namespaces.html)
      name. Can be a regex. Example: "^mynamespace$".'
    hidden: false
    name: query_namespace
    optType: opt
    required: false
    short: n
    type: String
  - argName: arg
    descr: 'Filter which components get selected by component name. Can be a regex.
      Example: "^component1".'
    hidden: false
    name: query_name
    optType: opt
    required: false
    type: String
  - argName: arg
    descr: 'A source directory containing viash config files, possibly structured
      in a hierarchical folder structure. Default: src/.'
    hidden: false
    name: src
    optType: opt
    required: false
    short: s
    type: String
  - argName: arg
    descr: Acts as a regular expression to filter the platform ids specified in the
      found config files. If this is not provided, all platforms will be used. If
      no platforms are defined in a config, the native platform will be used. In addition,
      the path to a platform yaml file can also be specified.
    hidden: false
    name: platform
    optType: opt
    required: false
    short: p
    type: String
  - argName: arg
    default: 'false'
    descr: Whether or not to run the process in parallel.
    hidden: false
    name: parallel
    optType: opt
    required: false
    short: l
    type: Boolean
  - argName: arg
    default: List()
    descr: Modify a viash config at runtime using [dynamic config modding](/reference/config_mods/#).
    hidden: false
    name: config_mod
    optType: opt
    required: false
    short: c
    type: List[String]
  - argName: arg
    default: 'false'
    descr: 'Fills in the {platform} field by applying each platform to the config
      separately.

      Note that this results in the provided command being applied once for every
      platform

      that matches the --platform regex.'
    hidden: false
    name: apply_platform
    optType: opt
    required: false
    short: a
    type: Boolean
  - argName: arg
    default: 'false'
    descr: Perform a dry run.
    hidden: false
    name: dry_run
    optType: opt
    required: false
    short: d
    type: Boolean
  - descr: The command to execute for each viash config file in the namespace.
    hidden: false
    name: cmd
    optType: trailArgs
    required: true
    type: String
  subcommands: []
title: viash ns
usesSubcommands: true

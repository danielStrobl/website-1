data:
- bannerCommand: viash ns exec
  bannerDescription: "Execute a command for all found Viash components.\nThe syntax\
    \ of this command is inspired by `find . -exec echo {} \\;`.\n\nThe following\
    \ fields are automatically replaced:  \n\n * `{}` | `{path}`: path to the config\
    \ file\n * `{abs-path}`: absolute path to the config file\n * `{dir}`: path to\
    \ the parent directory of the config file\n * `{abs-dir}`: absolute path to the\
    \ directory of the config file\n * `{main-script}`: path to the main script (if\
    \ any)\n * `{abs-main-script}`: absolute path to the main script (if any)\n *\
    \ `{functionality-name}`: name of the component\n * `{namespace}`: namespace of\
    \ the component\n * `{platform}`: selected platform id (only when --apply_platform\
    \ is used)\n * `{output}`: path to the destination directory when building the\
    \ component\n * `{abs-output}`: absolute path to the destination directory when\
    \ building the component\n\nA command suffixed by `\\;` (or nothing) will execute\
    \ one command for each\nof the Viash components, whereas a command suffixed by\
    \ `+` will execute one\ncommand for all Viash components."
  bannerUsage: 'viash ns exec ''echo {path} \\;''

    viash ns exec ''chmod +x {main-script} +'''
  name: exec
  opts:
  - argName: arg
    descr: 'Filter which components get selected by component and [namespace](/guide/project/structure.html#grouping-components-in-namespaces)
      name. Can be a regex. Example: "^mynamespace/component1$".'
    hidden: false
    name: query
    optType: opt
    required: false
    short: q
    type: String
  - argName: arg
    descr: 'Filter which namespaces get selected by [namespace](/guide/project/structure.html#grouping-components-in-namespaces)
      name. Can be a regex. Example: "^mynamespace$".'
    hidden: false
    name: query_namespace
    optType: opt
    required: false
    short: n
    type: String
  - argName: arg
    descr: 'Filter which components get selected by component name. Can be a regex.
      Example: "^component1".'
    hidden: false
    name: query_name
    optType: opt
    required: false
    type: String
  - argName: arg
    descr: 'A source directory containing viash config files, possibly structured
      in a hierarchical folder structure. Default: src/.'
    hidden: false
    name: src
    optType: opt
    required: false
    short: s
    type: String
  - argName: arg
    descr: Acts as a regular expression to filter the platform ids specified in the
      found config files. If this is not provided, all platforms will be used. If
      no platforms are defined in a config, the native platform will be used. In addition,
      the path to a platform yaml file can also be specified.
    hidden: false
    name: platform
    optType: opt
    required: false
    short: p
    type: String
  - argName: arg
    default: 'false'
    descr: Whether or not to run the process in parallel.
    hidden: false
    name: parallel
    optType: opt
    required: false
    short: l
    type: Boolean
  - argName: arg
    default: List()
    descr: Modify a viash config at runtime using [dynamic config modding](/reference/config_mods/#).
    hidden: false
    name: config_mod
    optType: opt
    required: false
    short: c
    type: List[String]
  - argName: arg
    default: 'false'
    descr: "Fills in the {platform} and {output} field by applying each platform to\
      \ the \nconfig separately. Note that this results in the provided command being\
      \ applied\nonce for every platform that matches the --platform regex."
    hidden: false
    name: apply_platform
    optType: opt
    required: false
    short: a
    type: Boolean
  - argName: arg
    default: 'false'
    descr: Perform a dry run.
    hidden: false
    name: dry_run
    optType: opt
    required: false
    short: d
    type: Boolean
  - descr: The command to execute for each viash config file in the namespace.
    hidden: false
    name: cmd
    optType: trailArgs
    required: true
    type: String
  subcommands: []
title: Viash Ns Exec
usesSubcommands: false

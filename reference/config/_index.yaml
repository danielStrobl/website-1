data:
- description: "A Viash configuration is a YAML file which contains metadata to describe\
    \ the behaviour and build target(s) of a component.  \nWe commonly name this file\
    \ `config.vsh.yaml` in our examples, but you can name it however you choose. \
    \ \n"
  example:
  - example: "functionality:\n  name: hello_world\n  arguments:\n    - type: string\n\
      \      name: --input\n      default: \"world\"\n  resources:\n    - type: bash_script\n\
      \      path: script.sh\n      text: echo Hello $par_input\nplatforms:\n  - type:\
      \ docker\n    image: \"bash:4.0\"\n"
    format: yaml
  hierarchy:
  - io.viash.config.Config
  name: __this__
  type: Config
- description: 'The [functionality](/reference/config/functionality/#) describes the
    behaviour of the script in terms of arguments and resources.

    By specifying a few restrictions (e.g. mandatory arguments) and adding some descriptions,
    Viash will automatically generate a stylish command-line interface for you.

    '
  name: functionality
  type: Functionality
- description: "A list of platforms to generate target artifacts for.\n\n - [Native](/reference/config/platforms/native/#)\n\
    \ - [Docker](/reference/config/platforms/docker/#)\n - [Nextflow VDSL3](/reference/config/platforms/nextflow/#)\n"
  name: platforms
  type: List of Platform
- description: 'Config inheritance by including YAML partials. This is useful for
    defining common APIs in

    separate files. `__merge__` can be used in any level of the YAML. For example,

    not just in the config but also in the functionality or any of the platforms.

    '
  example:
  - example: '__merge__: ../api/common_interface.yaml'
    format: yaml
  name: '`__merge__'
  since: Viash 0.6.3
  type: Option of File
order: 20
title: Config
topic: config

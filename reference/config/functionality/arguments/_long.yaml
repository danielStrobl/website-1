data:
- description: An `long` type argument has a numeric value without decimal points.
  example:
  - example: "arguments:\n  - name: --core_amount\n    type: long\n    default: 16\n\
      \    description: Amount of CPU cores to use\n    alternatives: [\"-c\"]\n"
    format: yaml
  hierarchy:
  - io.viash.functionality.arguments.LongArgument
  - io.viash.functionality.arguments.Argument
  name: __this__
  since: Viash 0.6.1
  type: LongArgument
- description: List of alternative format variations for this argument.
  name: alternatives
  type: OneOrMore of String
- description: "The name of the argument. Can be in the formats `--foo`, `-f` or `foo`.\
    \ The number of dashes determines how values can be passed:  \n\n  - `--foo` is\
    \ a long option, which can be passed with `executable_name --foo=value` or `executable_name\
    \ --foo value`\n  - `-f` is a short option, which can be passed with `executable_name\
    \ -f value`\n  - `foo` is an argument, which can be passed with `executable_name\
    \ value`  \n"
  name: name
  type: String
- description: Limit the amount of valid values for this argument to those set in
    this list. When set and a value not present in the list is provided, an error
    will be produced.
  example:
  - example: "- name: --values\n  type: long\n  choices: [1024, 2048, 4096]\n"
    format: yaml
  name: choices
  type: List of Long
- description: 'Structured information. Can be any shape: a string, vector, map or
    even nested map.'
  example:
  - example: "info:\n  category: cat1\n  labels: [one, two, three]"
    format: yaml
  name: info
  since: Viash 0.6.3
  type: Json
- description: Maximum allowed value for this argument. If set and the provided value
    is higher than the maximum, an error will be produced. Can be combined with [`min`](#min)
    to clamp values.
  example:
  - example: "- name: --my_long\n  type: long\n  max: 150\n"
    format: yaml
  name: max
  type: Option of Long
- description: The default value when no argument value is provided. This will not
    work if the [`required`](#required) property is enabled.
  example:
  - example: "- name: --my_long\n  type: long\n  default: 100\n"
    format: yaml
  name: default
  type: OneOrMore of Long
- description: An example value for this argument. If no [`default`](#default) property
    was specified, this will be used for that purpose.
  example:
  - example: "- name: --my_long\n  type: long\n  example: 100\n"
    format: yaml
  name: example
  type: OneOrMore of Long
- description: A description of the argument. This will be displayed with `--help`.
  name: description
  type: Option of String
- description: The delimiter character for providing [`multiple`](#multiple) values.
    `:` by default.
  example:
  - example: "- name: --my_long\n  type: long\n  multiple: true\n  multiple_sep: \"\
      ,\"\n"
    format: yaml
  - description: 'Here''s an example of how to use this:'
    example: my_component --my_long=10:80:152
    format: bash
  name: multiple_sep
  type: String
- description: Minimum allowed value for this argument. If set and the provided value
    is lower than the minimum, an error will be produced. Can be combined with [`max`](#max)
    to clamp values.
  example:
  - example: "- name: --my_long\n  type: long\n  min: 50\n"
    format: yaml
  name: min
  type: Option of Long
- description: Treat the argument value as an array. Arrays can be passed using the
    delimiter `--foo=1:2:3` or by providing the same argument multiple times `--foo
    1 --foo 2`. You can use a custom delimiter by using the [`multiple_sep`](#multiple_sep)
    property. `false` by default.
  example:
  - example: "- name: --my_long\n  type: long\n  multiple: true\n"
    format: yaml
  - description: 'Here''s an example of how to use this:'
    example: my_component --my_long=10:80:152
    format: bash
  name: multiple
  type: Boolean
- description: Specifies the type of the argument.
  name: type
  type: String
- description: Make the value for this argument required. If set to `true`, an error
    will be produced if no value was provided. `false` by default.
  example:
  - example: "- name: --my_long\n  type: long\n  required: true\n"
    format: yaml
  name: required
  type: Boolean
title: Long
topic: arguments

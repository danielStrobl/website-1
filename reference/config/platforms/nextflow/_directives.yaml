data:
- description: 'Directives are optional settings that affect the execution of the
    process.

    '
  example:
  - example: "directives:\n    container: rocker/r-ver:4.1\n    label: highcpu\n \
      \   cpus: 4\n    memory: 16 GB"
    format: yaml
  hierarchy:
  - io.viash.platforms.nextflow.NextflowDirectives
  name: __this__
  type: NextflowDirectives
- description: 'The `beforeScript` directive allows you to execute a custom (Bash)
    snippet before the main process script is run. This may be useful to initialise
    the underlying cluster environment or for other custom initialisation.


    See [`beforeScript`](https://www.nextflow.io/docs/latest/process.html#beforeScript).

    '
  example:
  - example: source /cluster/bin/setup
    format: yaml
  name: beforeScript
  type: Option of String
- description: 'Environment Modules is a package manager that allows you to dynamically
    configure your execution environment and easily switch between multiple versions
    of the same software tool.


    If it is available in your system you can use it with Nextflow in order to configure
    the processes execution environment in your pipeline.


    In a process definition you can use the `module` directive to load a specific
    module version to be used in the process execution environment.


    See [`module`](https://www.nextflow.io/docs/latest/process.html#module).

    '
  example:
  - example: '"ncbi-blast/2.2.27"'
    format: yaml
  - example: '"ncbi-blast/2.2.27:t_coffee/10.0"'
    format: yaml
  - example: '["ncbi-blast/2.2.27", "t_coffee/10.0"]'
    format: yaml
  name: module
  type: OneOrMore of String
- description: 'The `queue` directory allows you to set the queue where jobs are scheduled
    when using a grid based executor in your pipeline.


    See [`queue`](https://www.nextflow.io/docs/latest/process.html#queue).

    '
  example:
  - example: '"long"'
    format: yaml
  - example: '"short,long"'
    format: yaml
  - example: '["short", "long"]'
    format: yaml
  name: queue
  type: OneOrMore of String
- description: 'The `label` directive allows the annotation of processes with mnemonic
    identifier of your choice.


    See [`label`](https://www.nextflow.io/docs/latest/process.html#label).

    '
  example:
  - example: '"big_mem"'
    format: yaml
  - example: '"big_cpu"'
    format: yaml
  - example: '["big_mem", "big_cpu"]'
    format: yaml
  name: label
  type: OneOrMore of String
- description: 'The `container` directive allows you to execute the process script
    in a Docker container.


    It requires the Docker daemon to be running in machine where the pipeline is executed,
    i.e. the local machine when using the local executor or the cluster nodes when
    the pipeline is deployed through a grid executor.


    Viash implements allows either a string value or a map. In case a map is used,
    the allowed keys are: `registry`, `image`, and `tag`. The `image` value must be
    specified.


    See [`container`](https://www.nextflow.io/docs/latest/process.html#container).

    '
  example:
  - example: '"foo/bar:tag"'
    format: yaml
  - description: 'This is transformed to `"reg/im:ta"`:'
    example: '[ registry: "reg", image: "im", tag: "ta" ]'
    format: yaml
  - description: 'This is transformed to `"im:latest"`:'
    example: '[ image: "im" ]'
    format: yaml
  name: container
  type: Option[Either[Map of String,String,String]]
- description: 'The `publishDir` directive allows you to publish the process output
    files to a specified folder.


    Viash implements this directive as a plain string or a map. The allowed keywords
    for the map are: `path`, `mode`, `overwrite`, `pattern`, `saveAs`, `enabled`.
    The `path` key and value are required.

    The allowed values for `mode` are: `symlink`, `rellink`, `link`, `copy`, `copyNoFollow`,
    `move`.


    See [`publishDir`](https://www.nextflow.io/docs/latest/process.html#publishdir).

    '
  example:
  - example: '[]'
    format: yaml
  - example: '[ [ path: "foo", enabled: true ], [ path: "bar", enabled: false ] ]'
    format: yaml
  - description: 'This is transformed to `[[ path: "/path/to/dir" ]]`:'
    example: '"/path/to/dir"'
    format: yaml
  - description: 'This is transformed to `[[ path: "/path/to/dir", mode: "cache" ]]`:'
    example: '[ path: "/path/to/dir", mode: "cache" ]'
    format: yaml
  name: publishDir
  type: OneOrMore[Either[String,Map of String,String]]
- description: 'The `maxForks` directive allows you to define the maximum number of
    process instances that can be executed in parallel. By default this value is equals
    to the number of CPU cores available minus 1.


    If you want to execute a process in a sequential manner, set this directive to
    one.


    See [`maxForks`](https://www.nextflow.io/docs/latest/process.html#maxforks).

    '
  example:
  - example: '1'
    format: yaml
  - example: '3'
    format: yaml
  name: maxForks
  type: Option[Either of String,Int]
- description: 'The `maxErrors` directive allows you to specify the maximum number
    of times a process can fail when using the `retry` error strategy. By default
    this directive is disabled.


    See [`maxErrors`](https://www.nextflow.io/docs/latest/process.html#maxerrors).

    '
  example:
  - example: '1'
    format: yaml
  - example: '3'
    format: yaml
  name: maxErrors
  type: Option[Either of String,Int]
- description: 'The `cpus` directive allows you to define the number of (logical)
    CPU required by the process'' task.


    See [`cpus`](https://www.nextflow.io/docs/latest/process.html#cpus).

    '
  example:
  - example: '1'
    format: yaml
  - example: '10'
    format: yaml
  name: cpus
  type: Option[Either of Int,String]
- description: 'The `accelerator` directive allows you to specify the hardware accelerator
    requirement for the task execution e.g. GPU processor.


    Viash implements this directive as a map with accepted keywords: `type`, `limit`,
    `request`, and `runtime`.


    See [`accelerator`](https://www.nextflow.io/docs/latest/process.html#accelerator).

    '
  example:
  - example: '[ limit: 4, type: "nvidia-tesla-k80" ]'
    format: yaml
  name: accelerator
  type: Map of String,String
- description: 'The `time` directive allows you to define how long a process is allowed
    to run.


    See [`time`](https://www.nextflow.io/docs/latest/process.html#time).

    '
  example:
  - example: '"1h"'
    format: yaml
  - example: '"2days"'
    format: yaml
  - example: '"1day 6hours 3minutes 30seconds"'
    format: yaml
  name: time
  type: Option of String
- description: 'The `afterScript` directive allows you to execute a custom (Bash)
    snippet immediately after the main process has run. This may be useful to clean
    up your staging area.


    See [`afterScript`](https://www.nextflow.io/docs/latest/process.html#afterscript).

    '
  example:
  - example: source /cluster/bin/cleanup
    format: yaml
  name: afterScript
  type: Option of String
- description: "The `executor` defines the underlying system where processes are executed.\
    \ By default a process uses the executor defined globally in the nextflow.config\
    \ file.\n\nThe `executor` directive allows you to configure what executor has\
    \ to be used by the process, overriding the default configuration. The following\
    \ values can be used:\n\n| Name | Executor |\n|------|----------|\n| awsbatch\
    \ | The process is executed using the AWS Batch service. | \n| azurebatch | The\
    \ process is executed using the Azure Batch service. | \n| condor | The process\
    \ is executed using the HTCondor job scheduler. | \n| google-lifesciences | The\
    \ process is executed using the Google Genomics Pipelines service. | \n| ignite\
    \ | The process is executed using the Apache Ignite cluster. | \n| k8s | The process\
    \ is executed using the Kubernetes cluster. | \n| local | The process is executed\
    \ in the computer where Nextflow is launched. | \n| lsf | The process is executed\
    \ using the Platform LSF job scheduler. | \n| moab | The process is executed using\
    \ the Moab job scheduler. | \n| nqsii | The process is executed using the NQSII\
    \ job scheduler. | \n| oge | Alias for the sge executor. | \n| pbs | The process\
    \ is executed using the PBS/Torque job scheduler. | \n| pbspro | The process is\
    \ executed using the PBS Pro job scheduler. | \n| sge | The process is executed\
    \ using the Sun Grid Engine / Open Grid Engine. | \n| slurm | The process is executed\
    \ using the SLURM job scheduler. | \n| tes | The process is executed using the\
    \ GA4GH TES service. | \n| uge | Alias for the sge executor. |\n\nSee [`executor`](https://www.nextflow.io/docs/latest/process.html#executor).\n"
  example:
  - example: '"local"'
    format: yaml
  - example: '"sge"'
    format: yaml
  name: executor
  type: Option of String
- description: 'The `containerOptions` directive allows you to specify any container
    execution option supported by the underlying container engine (ie. Docker, Singularity,
    etc). This can be useful to provide container settings only for a specific process
    e.g. mount a custom path.


    See [`containerOptions`](https://www.nextflow.io/docs/latest/process.html#containeroptions).

    '
  example:
  - example: '"--foo bar"'
    format: yaml
  - example: '["--foo bar", "-f b"]'
    format: yaml
  name: containerOptions
  type: OneOrMore of String
- description: 'The `disk` directive allows you to define how much local disk storage
    the process is allowed to use.


    See [`disk`](https://www.nextflow.io/docs/latest/process.html#disk).

    '
  example:
  - example: '"1 GB"'
    format: yaml
  - example: '"2TB"'
    format: yaml
  - example: '"3.2KB"'
    format: yaml
  - example: '"10.B"'
    format: yaml
  name: disk
  type: Option of String
- description: 'The `tag` directive allows you to associate each process execution
    with a custom label, so that it will be easier to identify them in the log file
    or in the trace execution report.


    See [`tag`](https://www.nextflow.io/docs/latest/process.html#tag).

    '
  example:
  - example: '"foo"'
    format: yaml
  - example: '''$id'''
    format: yaml
  name: tag
  type: Option of String
- description: 'The `conda` directive allows for the definition of the process dependencies
    using the Conda package manager.


    Nextflow automatically sets up an environment for the given package names listed
    by in the `conda` directive.


    See [`conda`](https://www.nextflow.io/docs/latest/process.html#conda).

    '
  example:
  - example: '"bwa=0.7.15"'
    format: yaml
  - example: '"bwa=0.7.15 fastqc=0.11.5"'
    format: yaml
  - example: '["bwa=0.7.15", "fastqc=0.11.5"]'
    format: yaml
  name: conda
  type: OneOrMore of String
- description: ' The `machineType` can be used to specify a predefined Google Compute
    Platform machine type when running using the Google Life Sciences executor.


    See [`machineType`](https://www.nextflow.io/docs/latest/process.html#machinetype).

    '
  example:
  - example: '"n1-highmem-8"'
    format: yaml
  name: machineType
  type: Option of String
- description: "The `stageInMode` directive defines how input files are staged-in\
    \ to the process work directory. The following values are allowed:\n\n| Value\
    \ | Description |\n|-------|-------------| \n| copy | Input files are staged in\
    \ the process work directory by creating a copy. | \n| link | Input files are\
    \ staged in the process work directory by creating an (hard) link for each of\
    \ them. | \n| symlink | Input files are staged in the process work directory by\
    \ creating a symbolic link with an absolute path for each of them (default). |\
    \ \n| rellink | Input files are staged in the process work directory by creating\
    \ a symbolic link with a relative path for each of them. | \n\nSee [`stageInMode`](https://www.nextflow.io/docs/latest/process.html#stageinmode).\n"
  example:
  - example: '"copy"'
    format: yaml
  - example: '"link"'
    format: yaml
  name: stageInMode
  type: Option of String
- description: 'The `cache` directive allows you to store the process results to a
    local cache. When the cache is enabled and the pipeline is launched with the resume
    option, any following attempt to execute the process, along with the same inputs,
    will cause the process execution to be skipped, producing the stored data as the
    actual results.


    The caching feature generates a unique key by indexing the process script and
    inputs. This key is used to identify univocally the outputs produced by the process
    execution.


    The `cache` is enabled by default, you can disable it for a specific process by
    setting the cache directive to `false`.


    Accepted values are: `true`, `false`, `"deep"`, and `"lenient"`.


    See [`cache`](https://www.nextflow.io/docs/latest/process.html#cache).

    '
  example:
  - example: 'true'
    format: yaml
  - example: 'false'
    format: yaml
  - example: '"deep"'
    format: yaml
  - example: '"lenient"'
    format: yaml
  name: cache
  type: Option[Either of Boolean,String]
- description: 'The `pod` directive allows the definition of pods specific settings,
    such as environment variables, secrets and config maps when using the Kubernetes
    executor.


    See [`pod`](https://www.nextflow.io/docs/latest/process.html#pod).

    '
  example:
  - example: '[ label: "key", value: "val" ]'
    format: yaml
  - example: '[ annotation: "key", value: "val" ]'
    format: yaml
  - example: '[ env: "key", value: "val" ]'
    format: yaml
  - example: '[ [label: "l", value: "v"], [env: "e", value: "v"]]'
    format: yaml
  name: pod
  type: OneOrMore[Map of String,String]
- description: 'The `penv` directive allows you to define the parallel environment
    to be used when submitting a parallel task to the SGE resource manager.


    See [`penv`](https://www.nextflow.io/docs/latest/process.html#penv).

    '
  example:
  - example: '"smp"'
    format: yaml
  name: penv
  type: Option of String
- description: 'The `scratch` directive allows you to execute the process in a temporary
    folder that is local to the execution node.


    See [`scratch`](https://www.nextflow.io/docs/latest/process.html#scratch).

    '
  example:
  - example: 'true'
    format: yaml
  - example: '"/path/to/scratch"'
    format: yaml
  - example: '''$MY_PATH_TO_SCRATCH'''
    format: yaml
  - example: '"ram-disk"'
    format: yaml
  name: scratch
  type: Option[Either of Boolean,String]
- description: 'The `storeDir` directive allows you to define a directory that is
    used as a permanent cache for your process results.


    See [`storeDir`](https://www.nextflow.io/docs/latest/process.html#storeDir).

    '
  example:
  - example: '"/path/to/storeDir"'
    format: yaml
  name: storeDir
  type: Option of String
- description: 'The `maxRetries` directive allows you to define the maximum number
    of times a process instance can be re-submitted in case of failure. This value
    is applied only when using the retry error strategy. By default only one retry
    is allowed.


    See [`maxRetries`](https://www.nextflow.io/docs/latest/process.html#maxretries).

    '
  example:
  - example: '1'
    format: yaml
  - example: '3'
    format: yaml
  name: maxRetries
  type: Option[Either of String,Int]
- description: "By default the stdout produced by the commands executed in all processes\
    \ is ignored. By setting the `echo` directive to true, you can forward the process\
    \ stdout to the current top running process stdout file, showing it in the shell\
    \ terminal.\n \nSee [`echo`](https://www.nextflow.io/docs/latest/process.html#echo).\n"
  example:
  - example: 'true'
    format: yaml
  - example: 'false'
    format: yaml
  name: echo
  type: Option[Either of Boolean,String]
- description: 'The `errorStrategy` directive allows you to define how an error condition
    is managed by the process. By default when an error status is returned by the
    executed script, the process stops immediately. This in turn forces the entire
    pipeline to terminate.


    Table of available error strategies:

    | Name | Executor |

    |------|----------|

    | `terminate` | Terminates the execution as soon as an error condition is reported.
    Pending jobs are killed (default) |

    | `finish` | Initiates an orderly pipeline shutdown when an error condition is
    raised, waiting the completion of any submitted job. |

    | `ignore` | Ignores processes execution errors. |

    | `retry` | Re-submit for execution a process returning an error condition. |


    See [`errorStrategy`](https://www.nextflow.io/docs/latest/process.html#errorstrategy).

    '
  example:
  - example: '"terminate"'
    format: yaml
  - example: '"finish"'
    format: yaml
  name: errorStrategy
  type: Option of String
- description: 'The `memory` directive allows you to define how much memory the process
    is allowed to use.


    See [`memory`](https://www.nextflow.io/docs/latest/process.html#memory).

    '
  example:
  - example: '"1 GB"'
    format: yaml
  - example: '"2TB"'
    format: yaml
  - example: '"3.2KB"'
    format: yaml
  - example: '"10.B"'
    format: yaml
  name: memory
  type: Option of String
- description: "The `stageOutMode` directive defines how output files are staged-out\
    \ from the scratch directory to the process work directory. The following values\
    \ are allowed:\n\n| Value | Description |\n|-------|-------------| \n| copy |\
    \ Output files are copied from the scratch directory to the work directory. |\
    \ \n| move | Output files are moved from the scratch directory to the work directory.\
    \ | \n| rsync | Output files are copied from the scratch directory to the work\
    \ directory by using the rsync utility. |\n\nSee [`stageOutMode`](https://www.nextflow.io/docs/latest/process.html#stageoutmode).\n"
  example:
  - example: '"copy"'
    format: yaml
  - example: '"link"'
    format: yaml
  name: stageOutMode
  type: Option of String
title: Nextflow Directives
topic: nextflowParameters

---
title: "Setup Requirements"
search: true
execute:
  echo: false
  output: asis
---

## Apk Requirements

Specify which apk packages should be available in order to run the component.

**Example:**

```yaml
setup:
  - type: apk
    packages: [ sl ]

```

### packages

**Type**: `String` / `List of String`

Specifies which packages to install.

**Example:**

```yaml
packages: [ sl ]
```

### type

**Type**: `String`

Specifies the type of the requirement specification.

## Apt Requirements

Specify which apt packages should be available in order to run the component.

**Example:**

```yaml
setup:
  - type: apt
    packages: [ sl ]

```

### interactive

**Type**: `Boolean`

If `false`, the Debian frontend is set to non-interactive (recommended). Default: false.

### packages

**Type**: `String` / `List of String`

Specifies which packages to install.

**Example:**

```yaml
packages: [ sl ]
```

### type

**Type**: `String`

Specifies the type of the requirement specification.

## Docker Requirements

Specify which Docker commands should be run during setup.

**Example:**

```yaml
setup:
  - type: docker
    build_args: "R_VERSION=hello_world"
    run: |
      echo 'Run a custom command'
      echo 'Foo' > /path/to/file.txt
```

### add

**Type**: `String` / `List of String`

Specifies which `ADD` entries to add to the Dockerfile while building it.

**Example:**

```yaml
add: [ "http://foo/bar ." ]
```

### build_args

**Type**: `String` / `List of String`

Specifies which `ARG` entries to add to the Dockerfile while building it.

**Example:**

```yaml
build_args: [ "R_VERSION=4.2" ]
```

### copy

**Type**: `String` / `List of String`

Specifies which `COPY` entries to add to the Dockerfile while building it.

**Example:**

```yaml
copy: [ "resource.txt /path/to/resource.txt" ]
```

### env

**Type**: `String` / `List of String`

Specifies which `ENV` entries to add to the Dockerfile while building it. Unlike `ARG`, `ENV` entries are also accessible from inside the container.

**Example:**

```yaml
env: [ "R_VERSION=4.2" ]
```

### label

**Type**: `String` / `List of String`

Specifies which `LABEL` entries to add to the Dockerfile while building it.

**Example:**

```yaml
label: [ component="foo" ]
```

### resources

**Type**: `String` / `List of String`

::: {.callout-warning}
Deprecated since 0.6.3. Planned removal at 0.7.0. `resources` in `setup: {type: docker, resources: ...}` will be removed. Please use `copy` instead.
:::
Specifies which `COPY` entries to add to the Dockerfile while building it.

**Example:**

```yaml
resources: [ "resource.txt /path/to/resource.txt" ]
```

### run

**Type**: `String` / `List of String`

Specifies which `RUN` entries to add to the Dockerfile while building it.

**Example:**

```yaml
run: |
  echo 'Run a custom command'
  echo 'Foo' > /path/to/file.txt
```

### type

**Type**: `String`

Specifies the type of the requirement specification.

## Javascript Requirements

Specify which JavaScript packages should be available in order to run the component.

**Example:**

```yaml
setup:
  - type: javascript
    npm: packagename
    git: "https://some.git.repository/org/repo"
    github: "owner/repository"
    url: "https://github.com/org/repo/archive/HEAD.zip"

```

### git

**Type**: `String` / `List of String`

Specifies which packages to install using a Git URI.

**Example:**

```yaml
git: [ https://some.git.repository/org/repo ]
```

### github

**Type**: `String` / `List of String`

Specifies which packages to install from GitHub.

**Example:**

```yaml
github: [ owner/repository ]
```

### npm

**Type**: `String` / `List of String`

Specifies which packages to install from npm.

**Example:**

```yaml
npm: [ packagename ]
```

### packages

**Type**: `String` / `List of String`

Specifies which packages to install from npm.

**Example:**

```yaml
packages: [ packagename ]
```

### type

**Type**: `String`

Specifies the type of the requirement specification.

### url

**Type**: `String` / `List of String`

Specifies which packages to install using a generic URI.

**Example:**

```yaml
url: [ https://github.com/org/repo/archive/HEAD.zip ]
```

## Python Requirements

Specify which Python packages should be available in order to run the component.

**Example:**

```yaml
setup:
  - type: python
    pip: numpy
    github: [ jkbr/httpie, foo/bar ]
    url: "https://github.com/some_org/some_pkg/zipball/master"

```

### bazaar

**Type**: `String` / `List of String`

Specifies which packages to install using a Bazaar URI.

**Example:**

```yaml
bazaar: [ http://bazaar.launchpad.net/some_pkg/some_pkg/release-0.1 ]
```

### git

**Type**: `String` / `List of String`

Specifies which packages to install using a Git URI.

**Example:**

```yaml
git: [ https://some.git.repository/org/repo ]
```

### github

**Type**: `String` / `List of String`

Specifies which packages to install from GitHub.

**Example:**

```yaml
github: [ jkbr/httpie ]
```

### gitlab

**Type**: `String` / `List of String`

Specifies which packages to install from GitLab.

**Example:**

```yaml
gitlab: [ foo/bar ]
```

### mercurial

**Type**: `String` / `List of String`

Specifies which packages to install using a Mercurial URI.

**Example:**

```yaml
mercurial: [ https://hg.myproject.org/MyProject/#egg=MyProject ]
```

### packages

**Type**: `String` / `List of String`

Specifies which packages to install from pip.

**Example:**

```yaml
packages: [ numpy ]
```

### pip

**Type**: `String` / `List of String`

Specifies which packages to install from pip.

**Example:**

```yaml
pip: [ numpy ]
```

### pypi

**Type**: `String` / `List of String`

Specifies which packages to install from PyPI using pip.

**Example:**

```yaml
pypi: [ numpy ]
```

### script

**Type**: `String` / `List of String`

Specifies a code block to run as part of the build.

**Example:**

```yaml
script: |
  print("Running custom code")
  x = 1 + 1 == 2
```

### svn

**Type**: `String` / `List of String`

Specifies which packages to install using an SVN URI.

**Example:**

```yaml
svn: [ http://svn.repo/some_pkg/trunk/#egg=SomePackage ]
```

### type

**Type**: `String`

Specifies the type of the requirement specification.

### upgrade

**Type**: `Boolean`

Sets the `--upgrade` flag when set to true. Default: true.

### url

**Type**: `String` / `List of String`

Specifies which packages to install using a generic URI.

**Example:**

```yaml
url: [ https://github.com/some_org/some_pkg/zipball/master ]
```

### user

**Type**: `Boolean`

Sets the `--user` flag when set to true. Default: false.

## R Requirements

Specify which R packages should be available in order to run the component.

**Example:**

```yaml
setup: 
  - type: r
    cran: anndata
    bioc: [ AnnotationDbi, SingleCellExperiment ]
    github: rcannood/SCORPIUS

```

### bioc

**Type**: `String` / `List of String`

Specifies which packages to install from BioConductor.

**Example:**

```yaml
bioc: [ AnnotationDbi ]
```

### bioc_force_install

**Type**: `Boolean`

Forces packages specified in `bioc` to be reinstalled, even if they are already present in the container. Default: false.

**Example:**

```yaml
bioc_force_install: false
```

### bitbucket

**Type**: `String` / `List of String`

Specifies which packages to install from Bitbucket.

**Example:**

```yaml
bitbucket: [ org/package ]
```

### cran

**Type**: `String` / `List of String`

Specifies which packages to install from CRAN.

**Example:**

```yaml
cran: [ anndata, ggplot2 ]
```

### git

**Type**: `String` / `List of String`

Specifies which packages to install using a Git URI.

**Example:**

```yaml
git: [ https://some.git.repository/org/repo ]
```

### github

**Type**: `String` / `List of String`

Specifies which packages to install from GitHub.

**Example:**

```yaml
github: [ rcannood/SCORPIUS ]
```

### gitlab

**Type**: `String` / `List of String`

Specifies which packages to install from GitLab.

**Example:**

```yaml
gitlab: [ org/package ]
```

### packages

**Type**: `String` / `List of String`

Specifies which packages to install from CRAN.

**Example:**

```yaml
packages: [ anndata, ggplot2 ]
```

### script

**Type**: `String` / `List of String`

Specifies a code block to run as part of the build.

**Example:**

```yaml
script: |
  cat("Running custom code
")
  install.packages("anndata")
```

### svn

**Type**: `String` / `List of String`

Specifies which packages to install using an SVN URI.

**Example:**

```yaml
svn: [ https://path.to.svn/group/repo ]
```

### type

**Type**: `String`

Specifies the type of the requirement specification.

### url

**Type**: `String` / `List of String`

Specifies which packages to install using a generic URI.

**Example:**

```yaml
url: [ https://github.com/hadley/stringr/archive/HEAD.zip ]
```

## Ruby Requirements

Specify which Ruby packages should be available in order to run the component.

**Example:**

```yaml
setup:
  - type: ruby
    packages: [ rspec ]

```

### packages

**Type**: `String` / `List of String`

Specifies which packages to install.

**Example:**

```yaml
packages: [ rspec ]
```

### type

**Type**: `String`

Specifies the type of the requirement specification.

## Yum Requirements

Specify which yum packages should be available in order to run the component.

**Example:**

```yaml
setup:
  - type: yum
    packages: [ sl ]

```

### packages

**Type**: `String` / `List of String`

Specifies which packages to install.

**Example:**

```yaml
packages: [ sl ]
```

### type

**Type**: `String`

Specifies the type of the requirement specification.


data:
- description: 'Run a Viash component on a Docker backend platform.

    By specifying which dependencies your component needs, users will be able to build
    a docker container from scratch using the setup flag, or pull it from a docker
    repository.

    '
  hierarchy:
  - io.viash.platforms.DockerPlatform
  - io.viash.platforms.Platform
  name: __this__
  type: DockerPlatform
- description: Specify which apk packages should be available in order to run the
    component.
  example:
  - example: "setup:\n  - type: apk\n    packages: [ sl ]\n"
    format: yaml
  name: apk
  removed:
    deprecation: 0.5.15
    message: 'Use `setup` instead, e.g. `{type: docker, setup: [{ type: apk, ... }]}`.
      Will be removed.'
    removal: 0.7.0
  type: Option of ApkRequirements
- description: Specify which apt packages should be available in order to run the
    component.
  example:
  - example: "setup:\n  - type: apt\n    packages: [ sl ]\n"
    format: yaml
  name: apt
  removed:
    deprecation: 0.5.15
    message: 'Use `setup` instead, e.g. `{type: docker, setup: [{ type: apt, ... }]}`.
      Will be removed.'
    removal: 0.7.0
  type: Option of AptRequirements
- description: 'In Linux, files created by a Docker container will be owned by `root`.
    With `chown: true`, Viash will automatically change the ownership of output files
    (arguments with `type: file` and `direction: output`) to the user running the
    Viash command after execution of the component. Default value: `true`.'
  example:
  - example: 'chown: false'
    format: yaml
  name: chown
  type: Boolean
- description: Specify which Docker commands should be run during setup.
  example:
  - example: "setup:\n  - type: docker\n    build_args: [ GITHUB_PAT=hello_world ]\n\
      \    run: [ git clone ... ]\n    add: [ \"http://foo.bar .\" ]\n    copy: [\
      \ \"http://foo.bar .\" ]\n    resources: \n      - resource.txt /path/to/resource.txt\n"
    format: yaml
  name: docker
  removed:
    deprecation: 0.5.15
    message: 'Use `setup` instead, e.g. `{type: docker, setup: [{ type: docker, ...
      }]}`. Will be removed.'
    removal: 0.7.0
  type: Option of DockerRequirements
- description: 'As with all platforms, you can give a platform a different name. By
    specifying `id: foo`, you can target this platform (only) by specifying `-p foo`
    in any of the Viash commands.'
  example:
  - example: 'id: foo'
    format: yaml
  name: id
  type: String
- description: The base container to start from. You can also add the tag here if
    you wish.
  example:
  - example: 'image: "bash:4.0"'
    format: yaml
  name: image
  type: String
- description: The separator between the namespace and the name of the component,
    used for determining the image name.
  example:
  - example: 'namespace_separator: "+"'
    format: yaml
  name: namespace_separator
  type: String
- description: Name of a container's [organization](https://docs.docker.com/docker-hub/orgs/).
  name: organization
  type: Option of String
- description: A list of enabled ports. This doesn't change the Dockerfile but gets
    added as a command-line argument at runtime.
  example:
  - example: "port:\n  - 80\n  - 8080\n"
    format: yaml
  name: port
  type: OneOrMore of String
- description: Adds a `privileged` flag to the docker run.
  name: privileged
  removed:
    deprecation: 0.6.3
    message: 'Add a `privileged` flag in `run_args` instead, e.g. `{type: docker,
      run_args: "--privileged"}`.'
    removal: 0.7.0
  type: Option of Boolean
- description: Specify which Python packages should be available in order to run the
    component.
  example:
  - example: "setup:\n  - type: python\n    pip: [ numpy ]\n    git: [ https://some.git.repository/org/repo\
      \ ]\n    github: [ jkbr/httpie ]\n    gitlab: [ foo/bar ]\n    mercurial: [\
      \ http://... ]\n    svn: [ http://...]\n    bazaar: [ http://... ]\n    url:\
      \ [ http://... ]\n"
    format: yaml
  name: python
  removed:
    deprecation: 0.5.15
    message: 'Use `setup` instead, e.g. `{type: docker, setup: [{ type: python, ...
      }]}`. Will be removed.'
    removal: 0.7.0
  type: Option of PythonRequirements
- description: Specify which R packages should be available in order to run the component.
  example:
  - example: "setup: \n  - type: r\n    cran: [ dynutils ]\n    bioc: [ AnnotationDbi\
      \ ]\n    git: [ https://some.git.repository/org/repo ]\n    github: [ rcannood/SCORPIUS\
      \ ]\n    gitlab: [ org/package ]\n    svn: [ https://path.to.svn/group/repo\
      \ ]\n    url: [ https://github.com/hadley/stringr/archive/HEAD.zip ]\n    script:\
      \ [ 'devtools::install(\".\")' ]\n"
    format: yaml
  name: r
  removed:
    deprecation: 0.5.15
    message: 'Use `setup` instead, e.g. `{type: docker, setup: [{ type: r, ... }]}`.
      Will be removed.'
    removal: 0.7.0
  type: Option of RRequirements
- description: The URL to the a [custom Docker registry](https://docs.docker.com/registry/)
  example:
  - example: 'registry: https://my-docker-registry.org'
    format: yaml
  name: registry
  type: Option of String
- description: 'Enables or disables automatic volume mapping. Enabled when set to
    `Automatic` or disabled when set to `Manual`. Default: `Automatic`'
  name: resolve_volume
  type: DockerResolveVolume
- description: Add [docker run](https://docs.docker.com/engine/reference/run/) arguments.
  name: run_args
  type: OneOrMore of String
- description: "A list of requirements for installing the following types of packages:\n\
    \n - [apt](/reference/config/platforms/docker/setup/#apt-requirements)\n - [apk](/reference/config/platforms/docker/setup/#apk-requirements)\n\
    \ - [Docker setup instructions](/reference/config/platforms/docker/setup/#docker-requirements)\n\
    \ - [JavaScript](/reference/config/platforms/docker/setup/#javascript-requirements)\n\
    \ - [Python](/reference/config/platforms/docker/setup/#python-requirements)\n\
    \ - [R](/reference/config/platforms/docker/setup/#r-requirements)\n - [Ruby](/reference/config/platforms/docker/setup/#ruby-requirements)\n\
    \ - [yum](/reference/config/platforms/docker/setup/#yum-requirements)\n\nThe order\
    \ in which these dependencies are specified determines the order in which they\
    \ will be installed.\n"
  name: setup
  type: List of Requirements
- description: 'The Docker setup strategy to use when building a container.


    | Strategy | Description |

    |-----|----------|

    | `alwaysbuild` / `build` / `b` | Always build the image from the dockerfile.
    This is the default setup strategy.

    | `alwayscachedbuild` / `cachedbuild` / `cb` | Always build the image from the
    dockerfile, with caching enabled.

    | `ifneedbebuild` |  Build the image if it does not exist locally.

    | `ifneedbecachedbuild` | Build the image with caching enabled if it does not
    exist locally, with caching enabled.

    | `alwayspull` / `pull` / `p` |  Try to pull the container from [Docker Hub](https://hub.docker.com)
    or the [specified docker registry](/reference/config/platforms/docker/#registry).

    | `alwayspullelsebuild` / `pullelsebuild` |  Try to pull the image from a registry
    and build it if it doesn''t exist.

    | `alwayspullelsecachedbuild` / `pullelsecachedbuild` |  Try to pull the image
    from a registry and build it with caching if it doesn''t exist.

    | `ifneedbepull` |  If the image does not exist locally, pull the image.

    | `ifneedbepullelsebuild` |  If the image does not exist locally, pull the image.
    If the image does exist, build it.

    | `ifneedbepullelsecachedbuild` | If the image does not exist locally, pull the
    image. If the image does exist, build it with caching enabled.

    | `push` | Push the container to [Docker Hub](https://hub.docker.com)  or the
    [specified docker registry](/reference/config/platforms/docker/#registry).

    | `pushifnotpresent` | Push the container to [Docker Hub](https://hub.docker.com)
    or the [specified docker registry](/reference/config/platforms/docker/#registry)
    if the [tag](/reference/config/platforms/docker/#tag) does not exist yet.

    | `donothing` / `meh` | Do not build or pull anything.


    '
  example:
  - example: 'setup_strategy: alwaysbuild'
    format: yaml
  name: setup_strategy
  type: DockerSetupStrategy
- description: Specify a Docker image based on its tag.
  example:
  - example: 'tag: 4.0'
    format: yaml
  name: tag
  type: Option of String
- description: If anything is specified in the setup section, running the `---setup`
    will result in an image with the name of `<target_image>:<version>`. If nothing
    is specified in the `setup` section, simply `image` will be used. Advanced usage
    only.
  example:
  - example: 'target_image: myfoo'
    format: yaml
  name: target_image
  type: Option of String
- description: The source of the target image. This is used for defining labels in
    the dockerfile.
  example:
  - example: 'target_image_source: https://github.com/foo/bar'
    format: yaml
  name: target_image_source
  type: Option of String
- description: The organization set in the resulting image. Advanced usage only.
  example:
  - example: 'target_organization: viash-io'
    format: yaml
  name: target_organization
  type: Option of String
- description: The URL where the resulting image will be pushed to. Advanced usage
    only.
  example:
  - example: 'target_registry: https://my-docker-registry.org'
    format: yaml
  name: target_registry
  type: Option of String
- description: The tag the resulting image gets. Advanced usage only.
  example:
  - example: 'target_tag: 0.5.0'
    format: yaml
  name: target_tag
  type: Option of String
- description: Additional requirements specific for running unit tests.
  name: test_setup
  since: Viash 0.5.13
  type: List of Requirements
- description: Specifies the type of the platform.
  name: type
  type: String
- description: The working directory when starting the container. This doesn't change
    the Dockerfile but gets added as a command-line argument at runtime.
  example:
  - example: 'workdir: /home/user'
    format: yaml
  name: workdir
  type: Option of String
- description: Specify which yum packages should be available in order to run the
    component.
  example:
  - example: "setup:\n  - type: yum\n    packages: [ sl ]\n"
    format: yaml
  name: yum
  removed:
    deprecation: 0.5.15
    message: 'Use `setup` instead, e.g. `{type: docker, setup: [{ type: yum, ... }]}`.
      Will be removed.'
    removal: 0.7.0
  type: Option of YumRequirements
title: Docker Platform
topic: platforms

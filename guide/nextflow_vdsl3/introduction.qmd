---
title: Viash and Nextflow
search: true
engine: knitr
---

Nextflow is a highly popular and widely-used workflow manager in computational biology, featuring outstanding portability, reproducibility and scalability. However, while Nextflow's advantages are impressive, developing a Nextflow pipeline can be challenging, requiring significant domain knowledge and verbose code that is labour-intensive. Fortunately, Viash provides a solution to the barriers of Nextflow pipeline development.

Viash can help developers wrap their code into a state-of-the-art Nextflow script called a VDSL3 module. As we will demonstrate in the remainder of this guide, VDSL3 is effectively a separate DSL layer on top of Nextflow enabled by Viash, hence it is called Viash + Nextflow DSL 3, or VDSL3 for short. VDSL3's benefits extend beyond Nextflow pipeline development, including reusability, test-driven development, separation of concerns, and continuous testing (see below).

## Advantages of Nextflow

Nextflow is a widely-used workflow manager in computational biology and other scientific domains that offers a range of key advantages, including exemplary portability, reproducibility, and scalability.

**Portability** is one of the most significant advantages of Nextflow. Once a Nextflow workflow has been implemented, it is effortless to set up a new system to run that workflow. This system can be of one of many different platforms, including laptops, desktops, HPC clusters, and dynamic cloud infrastructure. Nextflow also supports various platforms or "executors," which are managed in a unified way.

**Scalability** is another advantage of Nextflow. When running a workflow on a large dataset cohort, the computations can be scaled out to multiple compute nodes automatically, depending on the chosen executor. This allows reducing the execution time significantly, from one month of execution time on a single system to just 43 minutes on a compute cluster with 1000 nodes.

**Reproducibility** is essential in computational biology and scientific research, and Nextflow supports full reproducibility by integrating easily with containerisation technologies such as Docker, Podman, and Singularity. This ensures that the workflow can be run multiple times with the same inputs and obtain the same or similar results.

## Drawbacks of Nextflow

While Nextflow has many advantages, there are some drawbacks that can make developing a pipeline using Nextflow more challenging than expected. These drawbacks include:

**Easy to Learn, Hard to Master**: While Nextflow offers a high-level syntax for writing workflows that is easy to learn, developing a pipeline that is on par with the current state of the art actually requires a significant amount of domain knowledge. This can limit collaborations between developers with varying backgrounds and pipeline development skill levels.

**Labour Intensive**: Developing a new Nextflow workflow can be quite labour-intensive, as the necessary code is very verbose and contains a lot of boilerplate code. While this can be an advantage in terms of fine-grained control over the workflow, it can also be a drawback in terms of development time and code maintainability.

**Learning Curve**: Nextflow has a steep learning curve, especially for developers who are new to the system. The documentation is extensive, but there is a lot to learn, and it can take time to become proficient in using Nextflow to its full potential.

**Debugging**: Debugging a Nextflow pipeline can be challenging, especially when an error occurs in a complex workflow. It can be difficult to determine the cause of the error, and troubleshooting can be time-consuming.

## Advantages of VDSL3

VDSL3 provides a solution to some of the barriers to Nextflow pipeline development. Viash can help developers wrap their code into a state-of-the-art Nextflow script called a VDSL3 module, solving the some of the labor-intensive nature of developing a Nextflow pipeline. The following are some of the key advantages of VDSL3:

**Lower Barrier to Entry**: Viash's user-friendly interface simplifies Nextflow pipeline development, enabling developers with varying backgrounds and skill levels to collaborate more efficiently. Viash provides a simple and intuitive command-line interface that makes it easy for developers to create workflows.

**Reusability**: Viash components can not only be used as a step in a Nextflow pipeline, but also as a standalone command-line utility. This reusability allows developers to make the most of the code they write, increasing the efficiency of the development process.

**Test-Driven Development**: Viash encourages test-driven development where unit tests are written before new functionality is developed. This approach helps to catch errors early, increasing the quality and reliability of the code.

**Separation of Concerns**: Viash allows developers to separate their code from Nextflow, reducing the complexity of the pipeline development process. Developers do not need any knowledge of Nextflow to start creating Viash components. Someone else can then write a Nextflow workflow consisting of the VDSL3 modules generated from the Viash components.

**Continuous Testing**: Viash offers helper scripts to automatically run component tests whenever commits are pushed by one of the developers. This allows catching bugs earlier, thereby preventing costly long-term bugs.

In the following sections, we'll show how to use build Nextflow modules from Viash components and how to put them together in a pipeline.

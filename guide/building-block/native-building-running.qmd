---
title: Native Executable
search: true
execute:
  echo: false
  output: asis
---

{{< include ../../includes/_language_chooser.qmd >}}
{{< include ../../includes/_python_helper.qmd >}}

This guide covers how you can can build and run a native executable.

## Building a native executable

To start with, create a Viash component that targets the native platform as explained in [this guide](/guide/component/creation/native.html) or download the sample component via the download button below.  
The zip contains the component in all [supported languages](/guide/component/languages.html). Simply rename the language folder you want to use to `hello_world` and use that as your working directory.

```{python}
create_zip(parent_dir = "/download/components/", zip_dir = "hello_world")
create_download_button("/download/components/hello_world.zip")
```

Next, use the [viash build](/reference/viash/build.html) command to generate an executable inside of a **bin** directory:

```bash
viash build config.vsh.yaml --output bin
```   

This will generate an executable named the same as your component in the **bin** directory:

```
hello_world
├── bin
│   └── hello_world
├── config.vsh.yaml
└── script.sh
```

## Documentation

It's often useful to know what arguments an executable expects before trying to run it. To display its documentation, run the executable with just the `--help` argument:

```bash
bin/hello_world --help
```

This will result in output that looks like this:

```
hello_world

A minimal example component.

Options:
    --input
        type: string
        default: World
```

This example takes a single optional string named `--input` as an argument. 

## Running the executable

Running a native executable is the same as any other executable on your system. Simply call it as a command in your terminal:

```bash
bin/hello_world
```

This results in the following output:

```
Hello World
```

You can pass arguments to it directly, which differs from using the [viash run](/guide/component/creation/native.html#running) command as Viash itself isn't called:

```bash
bin/hello_world --input "everyone!"
```

This outputs:

```
Hello everyone!
```

## What's next?

<!-- Executables can be used in a scripted pipeline, to read more about that use case see the [Scripted Pipeline](/guide/data-workflow/scripted-pipeline.html) guide.   -->
Now you know how to build and run native executables, you might also be interested in learning more about [executables with a Docker backend](/guide/building-block/docker/building-running.html).